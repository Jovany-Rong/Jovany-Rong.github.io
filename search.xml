<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【开源】办公自动化探索：全库质检周报助手]]></title>
    <url>%2F2019%2F05%2F30%2F%E3%80%90%E5%BC%80%E6%BA%90%E3%80%91%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8E%A2%E7%B4%A2%EF%BC%9A%E5%85%A8%E5%BA%93%E8%B4%A8%E6%A3%80%E5%91%A8%E6%8A%A5%E5%8A%A9%E6%89%8B%2F</url>
    <content type="text"><![CDATA[众所周知，事务性工作是繁杂而琐碎的。像一些周报等定时需要做的工作，有时会让人焦头烂额，陷入文件整理和对比的泥潭。比如每周一需要出的全库质检周报，就需要核对全库质检情况跟踪表，并逐个检查SVN上各地区提交的最新质检报告。 那么，是否有一种方法可以让计算机辅助我们完成这项工作呢？ 答案是肯定的，我们的全库质检周报助手就呼之欲出了。 什么？全库质检和你没关系？别着急，它的一些原理你会觉得有用的。 开发环境 Python 3.7 Openpyxl模块 Windows 10 开发难点该工具需要我们去核对SVN文件夹，看各地区是否提交了质检报告。那么Python自带的OS模块就能完成这项任务。 我们还需要检查跟踪表，那么我们就需要处理Excel文件。Python中这类模块有很多，这次我们选用比较简单的Openpyxl模块。 功能实现目前工具已经完成了1.0版本的开发，实现的功能有自动检查全库质检跟踪表（xlsx格式）各部门各地区是否填写本周进展及自动检查SVN目录中各地区是否提交了最新质检报告。 目前还无法自动帮我们出具周报，但已经帮我们处理了最复杂的工作。我们只需要等待几秒，对着终端出具我们的周报就可以了。 源代码本工具开源，大家可自由研究和使用，禁止用作商业用途～ 请大家前往我的GitHub克隆代码仓库获取源代码。 不想看源代码，想直接使用编译过的工具的，请至本站下载页面下载。]]></content>
      <categories>
        <category>办公自动化</category>
      </categories>
      <tags>
        <tag>办公自动化</tag>
        <tag>Python</tag>
        <tag>全库质检</tag>
        <tag>DCTK</tag>
        <tag>开源</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + NexT进阶美化攻略]]></title>
    <url>%2F2019%2F05%2F29%2FHexo-NexT%E8%BF%9B%E9%98%B6%E7%BE%8E%E5%8C%96%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[前言本文将介绍部署Hexo博客并启用NexT主题后一些进阶的美化技巧。美化后具体效果可以参考本站。 在本文中，站点配置文件指的是博客根目录下的 _config.yml 文件，主题配置文件指的是博客根目录下 themes/next/_config.yml 文件。 目录 切换主题风格 配置菜单 配置动态背景 添加页眉GitHub页面跳转 配置RSS 修改文章底部标签样式 添加文章末尾“本文结束”说明 修改代码块样式 配置侧边栏社交图标 配置首页文章阴影效果 添加网站底部字数统计 配置网站图标 添加文章字数统计 隐藏底部Hexo、NexT信息 配置友情链接 配置文章底部版权信息 配置站内搜索 配置Live2D动画效果 切换主题风格安装NexT主题后，默认的主题风格为Muse。如要切换主题风格，打开主题配置文件，找到如下配置。 12345# Schemesscheme: Muse //默认主题#scheme: Mist#scheme: Pisces#scheme: Gemini 注释掉当前的scheme，将需要切换的主题风格取消注释，重新生成博客后即可完成切换。 配置菜单NexT主题默认只有两个菜单，首页和归档。 如果需要添加，在主题配置文件中，查找“menu:”配置项，将需要的菜单项取消注释。 如果需要添加的菜单项不在配置文件的预设菜单项中，则按照统一格式添加自定义菜单项，从Font Awesome网站寻找合适的图标，将图标名称写在“||”后。 完成菜单项的配置后，接下来需要添加新菜单项的页面。此处以 标签 菜单项为例。 打开终端定位到博客根目录，使用如下命令创建菜单项页面。 1hexo new page "tags" 然后编辑博客根目录下 source/tags/index.md 文件，在其头信息中添加以下信息。 1type: "tags" 配置动态背景在主题配置文件中，查找“canvas_nest:”配置项，将其值配置为true即可。 添加页眉GitHub页面跳转前往GitHub Corners网站，选择一款喜欢的挂饰，并拷贝其代码。 打开博客根目录下 themes/next/layout/_layout.swig 文件，定位到如下代码。 1&lt;div class="headband"&gt;&lt;/div&gt; 在其下方添加上挂饰的代码。 配置RSS打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install --save hexo-generator-feed 打开站点配置文件，并定位到如下代码。 12# Extensions## Plugins: http://hexo.io/plugins/ 在其下方添加如下代码。 1plugins: hexo-generate-feed 在主题配置文件中，查找“rss:”配置项，将其值配置为 /atom.xml 即可。 修改文章底部标签样式打开博客根目录下 themes/next/layout/_macro/post.swig 文件，查找“rel=”tag”&gt;#”。 将“#”替换为如下代码。 1&lt;i class="fa fa-tag"&gt;&lt;/i&gt; 添加文章末尾“本文结束”说明打开博客根目录下 themes/next/layout/_macro/ 目录，在其中新建 passage-end-tag.swig 文件。 使用文本编辑器在该文件中添加如下内容。 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 打开博客根目录下 themes/next/layout/_macro/post.swig 文件，在其 post-body 和 post-footer 之间（一般为 END POST BODY 段落后）添加如下代码。 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 在主题配置文件中，在任意行添加如下内容。 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 修改代码块样式打开博客根目录下 themes/next/source/css/_custom/custom.styl 文件，添加如下代码。 1234567891011121314code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 配置侧边栏社交图标在主题配置文件中，搜索“social:”，对其取消注释，并添加自己的社交账号，从Font Awesome网站寻找合适的图标，将图标名称写在“||”后。完成后配置示例如下。 1234567891011121314151617181920212223# Social Links.# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: GitHub: https://github.com/Jovany-Rong || github E-Mail: mailto:amphliegg@gmail.com || envelope 知乎: https://www.zhihu.com/people/rong-chen-fei/activities || book-open TapTap: https://www.taptap.com/user/4323230 || gamepad #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false 配置首页文章阴影效果打开博客根目录下 themes/next/source/css/_custom/custom.styl 文件，添加如下代码。 12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 添加网站底部字数统计打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install hexo-wordcount --save 打开博客根目录下 themes/next/layout/_partials/footer.swig 文件，在末尾添加如下代码。 1234&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 配置网站图标首先准备好自己需要用到的图标，共需要准备16 x 16及32 x 32两种规格的图标。图标可以从第三方网站（如阿里巴巴矢量图标库等)中下载。 将图片保存在博客根目录下 themes/next/source/images/ 目录中。 在主题配置文件中，搜索“favicon:”，将其中的 small 参数和 medium 参数值分别设为16 x 16及32 x 32两种规格图标的相对路径。 添加文章字数统计该功能需要用到添加网站底部字数统计中安装的依赖，安装过程在此不赘述。 在主题配置文件中，搜索“post_wordcount:”，配置修改为如下所示。 12345678# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true totalcount: true separated_meta: true 隐藏底部Hexo、NexT信息打开博客根目录下 themes/next/layout/_partials/footer.swig 文件，注释掉以下这段代码。 12345678910111213141516171819202122232425262728&lt;!--&lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% if theme.footer.powered %&#125; &lt;div class="powered-by"&gt;&#123;# #&#125;&#123;&#123; __('footer.powered', '&lt;a class="theme-link" target="_blank" href="https://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;&#123;% if theme.footer.theme.enable %&#125; &lt;div class="theme-info"&gt;&#123;# #&#125;&#123;&#123; __('footer.theme') &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next"&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.custom_text %&#125; &lt;div class="footer-custom"&gt;&#123;# #&#125;&#123;&#123; theme.footer.custom_text &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;--&gt; 配置友情链接在主题配置文件中，搜索“Blog rolls”，如下配置，即可添加友情链接。 1234567891011# Blog rollslinks_icon: linklinks_title: 友情链接#links_layout: blocklinks_layout: inline#links中配置成自己需要的友情链接地址links: GitHub: https://github.com/ 南京国图信息产业有限公司: http://www.gtmap.cn/ 南京国图协同办公平台: http://oa.gtis.com.cn/ 配置文章底部版权信息打开博客根目录下 themes/next/layout/_macro/ 目录，在其中新建 my-copyright.swig 文件。 使用文本编辑器在该文件中添加如下内容。 123456789101112131415161718192021222324252627282930&#123;% if page.copyright %&#125;&lt;div class="my_post_copyright"&gt; &lt;script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script src="https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"&gt;&lt;/script&gt; &lt;script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"&gt;&lt;/script&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;"&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href="/" title="访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;" title="&#123;&#123; page.title &#125;&#125;"&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class="copy-path" title="点击复制文章链接"&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="&#123;&#123; page.permalink &#125;&#125;" aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard('.fa-clipboard'); $(".fa-clipboard").click(function()&#123; clipboard.on('success', function()&#123; swal(&#123; title: "", text: '复制成功', icon: "success", showConfirmButton: true &#125;); &#125;); &#125;); &lt;/script&gt;&#123;% endif %&#125; 打开博客根目录下 themes/next/source/css/_common/components/post/ 目录，在其中新建 my-copyright.styl 文件。 使用文本编辑器在该文件中添加如下内容。 123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #b5b5b5; font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #a3d2a3; text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 打开博客根目录下 themes/next/layout/_macro/post.swig 文件，定位到如下代码。 12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include 'wechat-subscriber.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125; 在其上方添加如下代码。 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'my-copyright.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 打开博客根目录下 themes/next/source/css/_common/components/post/post.styl 文件，在其末尾添加如下代码。 1@import "my-post-copyright" 打开站点配置文件，搜索 URL ，配置为如下所示。 123456# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://wenmobo.github.io/ //你的网站地址root: /permalink: :year/:month/:day/:title/permalink_defaults: 以后写的Markdown文章头信息中，添加 copyright: true 即可。 配置站内搜索打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install hexo-generator-search --save 再安装另一个依赖。 1npm install hexo-generator-searchdb --save 在站点配置文件中，添加如下内容。 12345search: path: search.xml field: post format: html limit: 10000 在主题配置文件中，搜索 local_search: 配置项，将 enable 参数配置为 true 即可。 配置Live2D动画效果打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install --save hexo-helper-live2d 自己制作或从第三方下载需要的Live2D动画。 下载好之后将所有动画模板拷贝到博客根目录下node_modules目录中。 在站点配置文件中，添加如下配置。 1234567891011live2d: enable: true pluginModelPath: assets/ model: use: live2d-widget-model-epsilon2_1 #模板目录，在node_modules里 display: position: right width: 150 height: 300 mobile: show: false #是否在手机进行显示]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>攻略</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coding Pages绑定阿里云域名无法使用二级域名访问解决方案]]></title>
    <url>%2F2019%2F05%2F18%2FCoding-Pages%E7%BB%91%E5%AE%9A%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[问题描述在腾讯云开发者平台（原Coding.net平台）部署Pages静态网页，在设置中绑定了阿里云顶级域名ABC.com。在阿里云域名控制台中，ABC.com域名有两条解析记录，分别通过主机记录的 @和www解析到Pages应用访问地址（Username.coding.me）。 解析完成后，通过顶级域名ABC.com能够正常访问到我们的Pages应用，但通过二级域名www.ABC.com访问时报404错误。 原因分析与GitHub平台不同，腾讯云开发者平台Pages应用支持绑定多个域名，但不支持自动绑定顶级域名下的二级域名，需要手动增加二级域名的绑定才能生效。 解决方法在Pages设置中增加二级域名www.ABC.com的绑定。稍待片刻，即可正常访问应用。]]></content>
      <categories>
        <category>网络技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>域名</tag>
        <tag>问题解决</tag>
        <tag>Coding</tag>
        <tag>腾讯云开发者平台</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub Pages + Hexo + 阿里云域名无法访问解决方案]]></title>
    <url>%2F2019%2F05%2F17%2FGitHub-Pages-Hexo-%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[问题描述购入了阿里云域名（英文.com），且有自己的GitHub Pages个人网站。在GitHub中配置了Custom Domain为刚刚购买的域名（英文.com），但通过该域名无法访问个人网站，且直接访问github.io也自动跳转到域名而失效。 解决方法等待域名实名制审核成功，收到手机短信提醒后，在域名控制台中新增2条解析记录，分别如下配置。 记录类型 主机记录 解析线路 记录值 MX优先级 TTL 状态 CNAME @ 默认 英文.com – 10分钟 正常 CNAME www 默认 英文.com – 10分钟 正常 在Hexo的博客根目录下source文件夹中，新建CNAME文件（没有后缀名且必须大写），使用文本编辑器打开，输入 英文.com 。 重新部署Hexo。 等待域名解析完成后，即可使用新域名访问个人网站。]]></content>
      <categories>
        <category>网络技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>域名</tag>
        <tag>问题解决</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[EasyOM 1.0.1更新说明]]></title>
    <url>%2F2019%2F05%2F16%2FEasyOM-1-0-1%E6%9B%B4%E6%96%B0%E8%AF%B4%E6%98%8E%2F</url>
    <content type="text"><![CDATA[作者： 戎 晨飞（Jovany Rong） 一、更新内容一览 修复了在Windows 6.1平台（包括Windows 7系列和Windows Server 2008系列等操作系统）中，有空置光驱时会造成硬盘检查崩溃的问题； 新增整体运维报告输出功能，在首页点击“Check”按钮进行整体运维结束时，程序自动产生html格式的运维报告和eom格式的加密报文（eom报文供提交时使用），使运维结果更具可读性； 提升了在目标数据库过大时，数据库运维的性能，使其更不容易出现卡死的情况； 多处错误修复和文本优化。 二、更新适用对象本次更新推荐所有EasyOM用户更新。 三、更新方式1) 通过程序内关于-&gt;关于EasyOM中的Update按钮下载最新版本；2) 直接点击此处获取更新。 四、其他说明对本次更新及EasyOM工具有任何意见或建议，请联系技术及质量管理部。]]></content>
      <categories>
        <category>运维产品</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>EasyOM</tag>
        <tag>更新说明</tag>
        <tag>运维</tag>
      </tags>
  </entry>
</search>
