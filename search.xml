<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[项目现场实施/运维人员常用计算机网络技术]]></title>
    <url>%2F2019%2F05%2F31%2F%E9%A1%B9%E7%9B%AE%E7%8E%B0%E5%9C%BA%E5%AE%9E%E6%96%BD-%E8%BF%90%E7%BB%B4%E4%BA%BA%E5%91%98%E5%B8%B8%E7%94%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[上世纪中期以来，计算机网络已经越来越成为人类社会必不可少的基础设施。当前，我们日常生活和工作几乎离不开计算机网络，无论是“万物互联”的互联网，还是承载各类系统、数据库的专网、内网，都扮演了极为重要的角色。 那么，在我们软件项目现场实施或运维过程中，都需要掌握哪些基本的计算机及网络技能呢？ 1 查看计算机IPWindows打开命令行窗口（cmd或PowerShell），执行以下命令。 1ipconfig Linux / MacOS打开终端（Terminal或Term2等），执行以下命令。 1ifconfig 2 测试IP或域名是否连通注意，目标机器防火墙必须允许回显。 Windows打开命令行窗口（cmd或PowerShell），执行以下命令。 1ping 192.168.1.1 其中将 192.168.1.1 更改为目标的IP地址或域名。 Linux / MacOS打开终端（Terminal或Term2等），执行以下命令。 1ping 192.168.1.1 其中将 192.168.1.1 更改为目标的IP地址或域名。 需要使用快捷键 Ctrl+C 中止命令，否则 ping 命令将持续执行。 3 测试目标计算机某端口是否开启注意，该方法使用Telnet，必须保证计算机已安装Telnet服务。 根据操作系统，打开命令行窗口或终端窗口，执行以下命令。 1telnet 192.168.1.1 8080 其中将 192.168.1.1 8080 更改为目标的IP/域名及端口号。 4 查看计算机路由Windows打开命令行窗口（cmd或PowerShell），执行以下命令。 1route print Linux打开终端（Terminal），执行以下命令。 1route MacOS打开终端（Terminal或Term2等），执行以下命令。 1netstat -nr 5 添加路由Windows打开命令行窗口（cmd或PowerShell），执行以下命令。 1route add 192.168.1.0 mask 255.255.255.0 192.168.1.1 其中将 192.168.1.0 更改为目标网段的IP， 255.255.255.0 更改为子网掩码， 192.168.1.1 更改为网关。 Linux打开终端（Terminal），执行以下命令。 1route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.1.1 其中将 192.168.1.0 更改为目标网段的IP， 255.255.255.0 更改为子网掩码， 192.168.1.1 更改为网关。 MacOS打开终端（Terminal或Term2等），执行以下命令。 1route add 192.168.1.0 -netmask 255.255.255.0 192.168.1.1 其中将 192.168.1.0 更改为目标网段的IP， 255.255.255.0 更改为子网掩码， 192.168.1.1 更改为网关。 6 远程桌面6.1 RDP该方式受控端只支持Windows，需要其打开3389端口。 Windows To Windows通过Windows自带的远程桌面工具完成。 主控端输入快捷键 Ctrl + R 调出 运行 对话框，在其中输入 mstsc 打开远程桌面工具。 输入连接参数，即可完成远程桌面连接。 MacOS To Windows通过Microsoft开发的 Microsoft Remote Desktop 应用程序完成。 该应用程序尚未在中国Mac App Store上架。 在Mac上登录美国地区Apple ID。 在Mac App Store中搜索 Microsoft Remote Desktop 应用程序并下载安装。 打开该应用程序，输入连接参数，即可完成远程桌面连接。 iOS/Android To Windows通过Microsoft开发的 Microsoft Remote Desktop 应用程序完成。 在手机应用商店（App Store、Play Store等）中搜索 Microsoft Remote Desktop 应用程序并下载安装。 打开该应用程序，输入连接参数，即可完成远程桌面连接。 6.2 Teamviewer该工具支持全平台。非商业用途免费，商业用途需付费。 受控端需安装Teamviewer软件或直接运行，若为安装版本还可配置无人值守。 主控端需安装Teamviewer软件，输入受控端的ID和密码即可完成。 在受控端设置中，还可开启使用IP地址作为ID，供内网使用。 6.3 SSH通过SSH2协议进行远程连接。 该方式支持全平台，要求受控端开启SSH服务，但仅支持命令行界面。这是我们远程Linux服务器的主要方式。 主控端若为Linux或MacOS，打开终端就能使用SSH进行远程连接。 主控端若为Windows，可安装第三方软件（PuTTY、XShell等）进行SSH连接。 7 Windows文件共享在Windows计算机中，可对某个目录设置共享，并配置用户权限。使用该功能需打开445端口。 另一台Windows计算机可以输入快捷键 Ctrl + R 调出 运行 对话框，在其中输入 //IP地址 访问该IP对应计算机的共享文件。 特殊地，通过输入 //IP地址/d$ 访问该IP对应计算机D盘中的所有文件。 另一台Linux或MacOS计算机则可以在文件系统管理器中找到局域网中的计算机来访问共享文件。 8 FTP文件传输协议 （FTP）是一套用于文件传输的标准协议。 8.1 搭建FTP服务器Windows在Windows计算机中，打开IIS管理器。 在IIS管理器中新建FTP站点。输入站点名称和根目录，并绑定本机IP地址和21端口，再配置权限即可完成FTP服务器的搭建。 Linux在Linux计算机中，搭建FTP服务器要稍微复杂一些。 首先通过yum等包管理器安装vsftpd，代码如下。 1yum -y install vsftpd 创建FTP用户，代码如下。 1useradd -s /sbin/nologin -d /home/ftp ftp 为 ftp 用户创建密码，代码如下。 1passwd ftp 编辑 /etc/vsftpd/vsftpd.conf 文件，将配置项 anonymous_enable 的值修改为NO，禁止匿名登录。 启动FTP服务，代码如下。 1systemctl start vsftpd.service 8.2 FTP客户端连接客户端建议使用FileZilla、FlashFXP等第三方客户端连接FTP服务器。 9 SFTP安全文件传输协议 （SFTP）也是一套用于文件传输的标准协议，它比FTP协议更安全。 9.1 搭建SFTP服务器Windows首先安装 freeSSHd 软件，安装过程在此不赘述。 安装完成后打开软件，在 SSH 标签页中取消勾选 Start SSH server on freeSSHd startup 和 Use new console engine ；再在 Telnet 标签页中取消勾选 Start Telnet server on freeSSHd startup 。 在 Users 标签页中添加用户设置，并在 Authentication 标签页中选择密码验证和公钥验证，最后在 SFTP 标签页中选择根目录。 启动SSH服务即可。 Linux大部分系统原生支持SSHd服务，可以直接使用。 9.2 FTP客户端连接客户端建议使用FileZilla、FlashFXP等第三方客户端连接SFTP服务器。 10 SVNSVN是一个开源的版本控制系统，也是目前我们公司使用的版本控制系统。这里主要介绍一下如何连接SVN服务器进行使用。 10.1 客户端选择Windows计算机可以安装 TortoiseSVN ，Mac计算机可在Mac App Store中下载 SnailSVN Lite 。 10.2 使用方法使用各个客户端都大同小异。下面介绍几种常见用法。 SVN Checkout：检出，迁出SVN配置库的内容。相当于Git中的克隆功能，适用于在本地新建SVN目录。 SVN Update：更新，从SVN配置库中更新本地文件，适用于本地SVN目录版本较旧需要更新成SVN配置库中的文件版本。 SVN Commit：提交，将本地目录文件提交到SVN配置库中，适用于本地文件较新需要提交到服务器的情况。注意，建议每一次提交都撰写相应的备注，养成良好的版本管理习惯。 11 GitGit是另一个开源的版本控制系统，也是世界上最流行的版本控制系统。它与SVN最大的区别就是支持本地版本管理。这里主要介绍一下如何使用本地Git客户端及GitHub。 11.1 客户端安装Git支持全平台，在其 官方网站 可以下载对应版本的Git软件。 11.2 创建版本库创建一个空目录，并将命令行窗口或终端窗口定位到该目录下。 执行如下代码创建Git版本库。 1git init 11.3 将文件添加到版本库例如我们新建了一个说明文件 readme.md ，现在想将它添加到Git版本库，执行如下代码。 1git add readme.md 特别地，如果要将目录下所有文件添加到版本库，执行如下代码。 1git add . 再执行如下代码将刚才的add操作提交。 1git commit -m "hello world" 其中 hello world 可替换成想要的备注。 11.4 添加GitHub远程仓库在 GitHub 中，注册或登录自己的账号，为了方便描述，这里将用户名暂定为 Your-Name ，执行代码时需将其改为自己的用户名。 在GitHub页面右上角找到 Create a new repo 按钮，创建一个新的仓库，这里仓库名暂定为 learngit 。 在本地仓库中，执行如下代码添加远程仓库。 1git remote add origin git@github.com:Your-Name/learngit.git 第一次推送远程仓库时，使用如下命令。 1git push -u origin master 以后再推送远程仓库时，使用如下命令。 1git push origin master 12 NASNAS被定义为一种特殊的专用数据存储服务器，包括存储器件（例如磁盘阵列、CD/DVD驱动器、磁带驱动器或可移动的存储介质）和内嵌系统软件，可提供跨平台文件共享功能。NAS通常在一个LAN上占有自己的节点，无需应用服务器的干预，允许用户在网络上存取数据，在这种配置中，NAS集中管理和处理网络上的所有数据，将负载从应用或企业服务器上卸载下来，有效降低总拥有成本，保护用户投资。 简单地说，NAS和网盘类似，只不过这个网盘是我们自己搭建的，主动权掌握在我们自己手里。 目前市面上常见的NAS品牌有Synology（群晖）、Buffalo（巴法络）、QNAP（威联通）等。 对自建NAS有兴趣的同学，请参考 这篇博文 进行搭建。 13 防火墙所谓防火墙指的是一个由软件和硬件设备组合而成、在内部网和外部网之间、专用网与公共网之间的边界上构造的保护屏障.是一种获取安全性方法的形象说法，它是一种计算机硬件和软件的结合，使Internet与Intranet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问规则、验证工具、包过滤和应用网关4个部分组成，防火墙就是一个位于计算机和它所连接的网络之间的软件或硬件。该计算机流入流出的所有网络通信和数据包均要经过此防火墙。 在网络中，所谓“防火墙”，是指一种将内部网和公众访问网（如Internet）分开的方法，它实际上是一种隔离技术。防火墙是在两个网络通讯时执行的一种访问控制尺度，它能允许你“同意”的人和数据进入你的网络，同时将你“不同意”的人和数据拒之门外，最大限度地阻止网络中的黑客来访问你的网络。换句话说，如果不通过防火墙，公司内部的人就无法访问Internet，Internet上的人也无法和公司内部的人进行通信。 注意，在任何时候不建议关闭防火墙！需要时开启相应端口即可。 13.1 Windows防火墙本例中以在Winodows计算机中配置防火墙，使其他计算机能通过3306端口访问这台计算机为例。 首先打开防火墙设置界面。 依次点击这些按钮：入站规则-&gt;新建规则-&gt;自定义-&gt;下一步-&gt;所有程序 。 选择协议类型为 TCP ，本地端口选择 特定端口 ，并填写 3306 ，在点击 下一步 。 选择此规则应用于的远程IP。选择 下列IP地址-&gt;添加 ，输入允许访问本地3306端口的IP。 一路下一步，配置一个简明的规则名称，如 MySQL访问 ，最后点击 完成 。 13.2 Linux防火墙由于不同的Linux版本采用的防火墙版本不同，这里以在CentOS 6中开放3306端口为例。 在终端中输入如下命令开启3306端口。 1iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT 输入如下命令，保存防火墙设置。 1service iptables save 输入如下命令，重新启动防火墙。 1service iptables restart 14 病毒防护WindowsWindows相对是计算机病毒最泛滥的平台，因此建议在保证防火墙开启的前提下，安装杀毒软件。项目现场如果客户已经购买了企业级杀毒软件，一定要定期查杀病毒。 个人版杀毒软件可以根据个人喜好安装 火绒 、 360 等。 同时，由于近年来勒索病毒肆虐，一定要检查计算机的危险端口（如3389、445、139等）在不必要时保持关闭。 Linux/MacOS确保防火墙时刻开启并正确配置可免受大部分木马和病毒的侵扰。 15 加密及数字签名加密算法主要有两种，对称加密和非对称加密。 对称加密：加密和解密的密钥一样，比如用123加密就是用123解密，但是实际中密码都是普通数据在互联网传输的，这样一点密码被中间人截取并破解，加密直接被攻破。 非对称加密：把密钥分为公钥和私钥，公钥是公开的所有人都可以认领，私钥是保密的只有一个人知道。假设A要发送一封Email给B，他不想让任何其他人在传输中看到Email的内容，做法就是使用B的公钥对Email加密，只有B的私钥能够解密（B的私钥唯一性保证信件不会泄露）。 公钥的作用：对内容本身加密，保证不被其他人看到。 私钥的作用：证明内容的来源。 公钥和私钥是配对关系，公钥加密就用私钥解密，反之亦然，用错的密钥来尝试解密会报错。 对于数字签名，也可以用这个例子做一个通俗的解释。 A先对这封Email执行哈希运算得到hash值简称“摘要”，取名h1。 然后用自己私钥对摘要加密，生成的东西叫“数字签名”。 把数字签名加在Email正文后面，一起发送给B。当然，为了防止邮件被窃听你可以用继续公钥加密。 B收到邮件后用A的公钥对数字签名解密，成功则代表Email确实来自A，失败说明有人冒充。 B对邮件正文执行哈希运算得到hash值，取名h2。 B会对比第4步数字签名的hash值h1和自己运算得到的h2，一致则说明邮件未被篡改。]]></content>
      <categories>
        <category>计算机技术</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>计算机</tag>
        <tag>培训</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络基本介绍]]></title>
    <url>%2F2019%2F05%2F31%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[上世纪中期以来，计算机网络已经越来越成为人类社会必不可少的基础设施。当前，我们日常生活和工作几乎离不开计算机网络，无论是“万物互联”的互联网，还是承载各类系统、数据库的专网、内网，都扮演了极为重要的角色。 那么，你真的了解计算机网络吗？今天我们就来简单介绍一下计算机网络的基本知识。 1 什么是计算机网络计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。 1.1 计算机网络的定义狭义的计算机网络是指一些相互连接的、以共享资源为目的的、自治的计算机的集合。从广义上看，现在许多终端也具备了基本的计算机功能，因此早期面向终端的网络也可称之为计算机网络。 从逻辑功能上看，计算机网络是以传输信息为基础目的，用通信线路将多个计算机连接起来的计算机系统的集合，一个计算机网络组成包括传输介质和通信设备。 从用户角度看，计算机网络是一个对用户透明的、能为用户自动管理资源的大的计算机系统。 从连接的角度看，计算机网络就是通过线路互连起来的、自治的计算机集合，确切的说就是将分布在不同地理位置上的具有独立工作能力的计算机、终端及其附属设备用通信设备和通信线路连接起来，并配置网络软件，以实现计算机资源共享的系统。 从需求上来看，计算机网络就是由大量独立的、但相互连接起来的计算机来共同完成计算机任务。 1.2 计算机网络的发展历程重要计算机网络发展的年表包括： 20世纪50年代后期，早期的计算机网络包括美国军用雷达系统半自动地面环境（SAGE）。 1959年，阿纳托利·伊万诺维奇·基托夫向苏联共产党中央委员会提出了一个详细的计划，在计算中心网络的基础上重新组织对苏联武装力量和苏联经济的控制， 即OGAS。 1960年，商业航空预订系统半自动商业研究环境（SABRE）上线了两台相连的主机。 1963年，J. C. R. Licklider向办公室同事发送了一份备忘录，讨论星际计算机网络的概念，这是一个旨在允许计算机用户之间进行一般通信的计算机网络。 1964年，达特茅斯学院的研究人员为大型计算机系统的分布式用户开发了达特茅斯时间共享系统。同年，在麻省理工学院，由通用电气和贝尔实验室支持的研究小组使用计算机来路由和管理电话连接。 在整个20世纪60年代，Paul Baran和Donald Davies独立开发了分组交换的概念，以通过网络在计算机之间传输信息。戴维斯率先使用NPL网络实施这一概念，NPL网络是国家物理实验室（英国）的局域网，线路速度为768Kb/s。 1965年，Western Electric推出了第一款广泛使用的电话开关，实现了真正的计算机控制。 1966年，Thomas Marill和Lawrence G. Roberts发表了一篇关于计算机时间共享的实验性广域网（WAN）的论文。 1969年，ARPANET的前四个节点使用加州大学洛杉矶分校，斯坦福研究所，加州大学圣巴巴拉分校和犹他大学之间的50Kb/s电路连接。Leonard Kleinrock开展了理论工作来模拟分组交换网络的性能，这支持了ARPANET的发展。他在20世纪70年代后期与学生Farouk Kamoun一起进行分层路由的理论工作，对于当今互联网的运作仍然至关重要。 1972年，部署了使用X.25的商业服务，后来用作扩展TCP/IP网络的底层基础设施。 1973年，法国CYCLADES网络率先让主机负责可靠的数据传输，而不是网络本身的集中服务。 1973年，罗伯特梅特卡夫在Xerox PARC研究中心写了一份正式备忘录，描述以太网。这是一个基于阿罗哈网络的网络系统，在20世纪60年代由夏威夷大学的诺曼艾布拉姆森及其同事开发。 1976年7月，罗伯特梅特卡夫和大卫博格斯发表了他们的论文“以太网：本地计算机网络的分布式分组交换”并合作了1977年和1978年收到的几项专利。1979年，罗伯特梅特卡夫一直致力于使以太网成为开放标准。 1976年，Datapoint Corporation的John Murphy创建了ARCNET，这是一个首先用于共享存储设备的令牌传递网络。 1995年，以太网的传输速度容量从10Mb/s增加到100Mb/s。到1998年，以太网支持千兆位的传输速度。随后，增加了高达400Gb/s的更高速度（截至2018年）。以太网容易扩展的能力（例如快速适应支持新的光纤电缆速度）是其继续使用的一个因素。 1.3 计算机网络的属性计算机网络可以被认为是电气工程，电子工程，电信，计算机科学，信息技术或计算机工程的一个分支，因为它依赖于相关学科的理论和实际应用。计算机网络促进人际通信，允许用户通过各种方式有效和轻松地进行通信：电子邮件、即时通讯、在线聊天、语音电话、视频电话和视频会议等。计算机网络允许共享网络和计算资源。用户可以访问和使用网络上的设备提供的资源，例如在共享网络打印机上打印文档或使用共享存储设备。网络允许共享文件、数据和其他类型的信息，使授权用户能够访问存储在网络上其他计算机上的信息。分布式计算使用网络上的计算资源来完成任务。黑客可以使用计算机网络在连接到网络的设备上部署计算机病毒或计算机蠕虫，或者防止这些设备通过拒绝服务攻击访问网络。 2 什么是数据包数据包是由分组交换网络承载的格式化数据单元。数据包由控制信息和用户数据组成，也称为有效负载。控制信息提供用于传送有效载荷的数据，例如：源和目的地网络地址，错误检测码和排序信息。通常，控制信息可在数据包标题和预告片中找到。数据包交换与电路交换相比，通信介质的带宽在多个通信会话之间共享。 2.1 数据包的组成数据包可能包含以下任何组件： 2.1.1 地址数据包的路由需要两个网络地址，即发送主机的源地址和接收主机的目标地址。 2.1.2 错误检测和纠正错误检测和纠正在协议栈中的各个层执行。数据包可以包含校验和、奇偶校验位或循环冗余校验，以检测在传输期间发生的错误。 发送器在发送分组之前执行计算。在目的地收到时，重新计算校验和，并与数据包中的校验和进行比较。如果发现差异，则可以纠正或丢弃数据包。这些丢弃导致的任何数据包丢失由网络协议处理。 在某些情况下，在路由时可能需要修改数据包，在这种情况下会重新计算校验和。 2.1.3 跳数在故障情况下，数据包最终可以通过闭合电路。如果什么也没做，最终循环的数据包数量会增加，直到网络拥塞到故障点。生存时间是每次数据包通过网络节点时减少一个的字段。如果该字段达到零，则路由失败，并丢弃该数据包。 以太网分组没有生存时间字段，因此在存在交换机环路的情况下受到广播辐射的影响。 2.1.4 长度可能有一个字段用于标识整个数据包长度。但在某些类型的网络中，传输的持续时间暗示了长度。 2.1.5 优先级某些网络实现的服务质量可以优先考虑某些类型的数据包优先于其他类型的数据包。该字段指示应该使用哪个数据包队列；发生拥塞的网络中，高优先级队列比低优先级队列更快地清空。 2.1.6 有效负载通常，有效负载是代表应用程序承载的数据。它通常具有可变长度，最大可由网络协议设置，有时也可以是路由上的设备设置。必要时，某些网络可以将较大的数据包分成较小的数据包。 2.2 应用实例2.2.1 IP数据包IP数据包由标头和有效负载组成。标头由固定和可选字段组成。然后添加数据包携带的数据到包中。IP数据包没有标尾。 但是，IP数据包通常作为以太网帧内的有效负载携带，以太网帧具有自己的标头和标尾。 许多网络不提供数据包的传送、非重复或有序传送的保证，例如因特网的UDP协议。但是，可以在可以提供这种保护的数据包服务之上层叠传输协议；TCP和UDP是七层OSI模型的第4层（传输层）的最佳示例。 2.2.2 NASA深空网络空间数据系统咨询委员会（CCSDS）分组遥测标准定义了用于在深空信道上传输航天器仪表数据的协议。在该标准下，使用一个或多个分组发送从航天器仪器发送的图像或其他数据。 3 什么是OSI模型开放式系统互联通信参考模型（英语：Open System Interconnection Reference Model，缩写为 OSI），简称为OSI模型（OSI model），一种概念模型，由国际标准化组织提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于ISO/IEC 7498-1。 3.1 OSI模型的历史在制定计算机网络标准方面，起着重大作用的两大国际组织是：国际电信联盟电信标准化部门，与国际标准组织（ISO），虽然它们工作领域不同，但随着科学技术的发展，通信与信息处理之间的界限开始变得比较模糊，这也成了国际电信联盟电信标准化部门和ISO共同关心的领域。1984年，ISO发布了著名的ISO/IEC 7498标准，它定义了网络互联的7层框架，也就是开放式系统互联参考模型。 3.2 OSI模型层次划分根据建议X.200，OSI将计算机网络体系结构划分为以下七层，标有1～7，第1层在底部。 现“OSI/RM”是英文“Open Systems Interconnection Reference Model”的缩写。 第7层 应用层应用层（Application Layer）提供为应用软件而设的接口，以设置与另一应用软件之间的通信。例如: HTTP，HTTPS，FTP，TELNET，SSH，SMTP，POP3等。 第6层 表达层表达层（Presentation Layer）把数据转换为能与接收者的系统格式兼容并适合传输的格式。 第5层 会话层会话层（Session Layer）负责在数据传输中设置和维护计算机网络中两台计算机之间的通信连接。 第4层 传输层传输层（Transport Layer）把传输表头（TH）加至数据以形成数据包。传输表头包含了所使用的协议等发送信息。例如:传输控制协议（TCP）等。 第3层 网络层网络层（Network Layer）决定数据的路径选择和转寄，将网络表头（NH）加至数据包，以形成分组。网络表头包含了网络数据。例如:互联网协议（IP）等。 第2层 数据链路层数据链路层（Data Link Layer）负责网络寻址、错误侦测和改错。当表头和表尾被加至数据包时，会形成帧。数据链表头（DLH）是包含了物理地址和错误侦测及改错的方法。数据链表尾（DLT）是一串指示数据包末端的字符串。例如以太网、无线局域网（Wi-Fi）和通用分组无线服务（GPRS）等。 分为两个子层：逻辑链路控制（logical link control，LLC）子层和介质访问控制（media access control，MAC）子层。 第1层 物理层物理层（Physical Layer）在局部局域网上传送数据帧（data frame），它负责管理计算机通信设备和网络媒体之间的互通。包括了针脚、电压、线缆规范、集线器、中继器、网卡、主机接口卡等。 4 什么是网络拓扑4.1 定义网络拓扑，指构成网络的成员间特定的排列方式，一般分为物理的、真实的、配在线的结构，或逻辑的、虚拟的、程序设计上的。如果两个网络的连接结构相同，我们就说它们的网络拓扑相同，尽管它们各自内部的物理接线、节点间距离可能会有不同。 4.2 分类 点对点（Point-to-point） 总线拓扑（Bus） 星状拓扑（Star） 环状拓扑（Ring） 网状拓扑（Mesh） 树状拓扑（Tree） 混合式拓扑（Hybrid） 菊花链拓扑（Daisy Chain） 线形拓扑（Linear）：可以多级星形网络来模拟。网络中的任一外围节点只通过一个其它节点来向中央节点方向进行传输。 5 什么是数据传输数据传输，数字传输，或数字通信是数据（数字比特流）在一个点对点或点对多点通信的物理传输管道。这样的管道包括双绞线、光纤、无线通信频道、存储设备及计算机总线。数据本身以一种电磁信号代表，如电压、无线电波、微波或红外线信号。 模拟通信用于传输连续变化的模拟信号，数字通信则用于传输离散消息。运用一个数字调制方法，离散消息可表示为一系列脉冲通过一个线路码（基带传输），或一组有限的连续变化波形（通带传输）。通带调制与相应的解调（也被称为检出）通过调制解调器设备实现。依照数字信号最常见的定义，通常以基带与通带两种信号表示的比特流被认为是数据传输。另一种定义中则只考虑到基带信号，而数据的通带传输作为一种形式的数模转换。 数据传输可以是从数据源始发的数字信息，例如一台计算机或一个键盘。也可以是将一个模拟信号如电话或视频信号数字化至一个比特流，例如使用脉冲编码调制（PCM）或更进一步的数据压缩（数模转换与数据压缩）方案。这种信源的编解码是通过编解码器设备所进行的。 5.1 概述数字传输或数据传输以前一直属于电信和电气工程的范畴。数据传输的基本原则也可以包涵在数据通信之中的计算机科学/计算机工程学科内，其中还包括计算机联网或计算机通信应用程序和网络协议中，例如路由、交换和进程间通信。虽然传输控制协议（TCP）涉及到“传输”这个术语，TCP和其他传输层协议一般都“不”在有关数据传输的教科书或课程中讨论，而是在计算机网络中说明。 远程传输一词涉及模拟通信和数字通信。在大多数的教科书中，模拟传输一词仅是指一个模拟信息信号通过一个模拟信号（没有数字化）的传输，无论是作为一个非调制的基带信号，还是作为用模拟调制方法（如AM或FM）的一个通带信号。它也可能包括模拟上的模拟脉冲调制的基带信号，如脉冲宽度调制。在计算机联网的传统的几本书中，“模拟传输”是指使用数字调制方法的位流通带传输，比如FSK， PSK和ASK。注意，这些方法包括在例如名为数字传输或数据传输的教科书中。 数据传输的理论方面包括在信息论和编码理论中。 5.2 协议分层在数据传输领域的课程与教材中，通常使用如下的OSI模型处理协议分层与主题： 第一层，物理层 信道编码，包括 数字调制schemes 线路编码schemes 前向纠错码（FEC）码 位同步 多路复用 均衡 信道模型 第二层，数据链路层 信道接入schemes, 介质访问控制（MAC） 分组模式通信和帧同步 错误检测和自动重复请求（ARQ） 流量控制 第六层，表达层 信源编码（数字化和数据压缩）和信息论 加密（可能发生在任何一层） 6 什么是节点在数据通信中，一个物理网络节点可以是数据电路端接设备（DCE），如调制解调器、 集线器、桥接器或交换机；也可以是一个数据终端设备（DTE），如数字手机，打印机或主机（例如路由器、工作站或服务器）。 如果所讨论的网络是一个LAN或WAN，每一个LAN或WAN节点（至少应该是数据链路层设备）必须拥有MAC地址，一般每个网卡拥有一个。例如计算机、包交换机、xDSL调制解调器（带有乙太接口）以及无线LAN接入点。注意，集线器构成一个物理网络节点，但是并不构成LAN网络节点。这是因为一个使用集线器连接的网络逻辑上来说是一个总线网络。类似的，中继器或PSTN调制解调器（带有串行接口）是一个物理网络节点而不是一个LAN节点。 如果所讨论的网络是Internet或一个Intranet，许多物理网络节点是主机（即通过IP地址来标识的Internet节点）。所有的主机都是物理网络节点。但是，一些数据链路层设备，如交换机、桥接器和WLAN 接入点不拥有IP主机地址（除了有时用于管理目的），这些设备不认为是Internet节点或主机，但它们是物理网络节点和LAN节点。 7 什么是网络传输协议通信协议（英语：Communications Protocol，也称传输协议）在电信中是指在任何物理介质中允许两个或多个在传输系统中的终端之间传播信息的系统标准，也是指计算机通信或网络设备的共同语言。通信协议定义了通信中的语法学, 语义学和同步规则以及可能存在的错误检测与纠正。通信协议在硬件，软件或两者之间皆可实现。 为了交换大量信息，通信系统使用通用格式（协议）。每条信息都有明确的意义使得预定位置给予响应，并独立实现回应指定的行为，通信协议须参与实体都同意才能生效。为了达成一致，协议必须要有技术标准. 编程语言在计算方面也应有相应标准，所以在这个方面可以用编程语言做类比: 编程语言是为了模式化的计算而传输协议为了更畅通的交流。 多类别协议构建了单个传输的不同方面，包括同时进行的协议模块，和在软件上实现时的协议栈。 网络传输协议（Internet communication protocol）是互联网工程任务组 （IETF）制定的。电气电子工程师学会（IEEE）负责有线无线传输， 国际标准化组织 (ISO) 负责其他类别。ITU-T 负责电信通讯传输以及公共交换电话网 (PSTN)的格式。 在公共交换电话网与网络技术融合的今天，形势驱使着通信标准进一步的合并收敛。 8 什么是路由路由（routing）就是通过互联的网络把信息从源地址传输到目的地址的活动。路由发生在OSI网络参考模型中的第三层即网络层。 路由引导分组转送，经过一些中间的节点后，到它们最后的目的地。作成硬件的话，则称为路由器。路由通常根据路由表——一个存储到各个目的地的最佳路径的表——来引导分组转送。因此为了有效率的转送分组，创建存储在路由器存储器内的路由表是非常重要的。 路由与桥接的不同，在于路由假设地址相似的节点距离相近。这使得路由表中的一项纪录可以表示到一群地址的路径。因此，在大型网络中，路由优于桥接，且路由已经成为互联网上查找路径的最主要方法。 较小的网络通常可以手动设置路由表，但较大且拥有复杂拓扑的网络可能常常变化，若要手动创建路由表是不切实际的。尽管如此，大多数的公共交换电话网络（PSTN）仍然使用预先计算好的路由表，在直接连线的路径断线时才使用预备的路径；见公共交换电话网路由。“动态路由”尝试按照由路由协议所携带的信息来自动创建路由表以解决这个问题，也让网络能够近自主地避免网络断线或失败。 动态路由当前主宰了整个互联网。然而，设置路由协议常须要经验与技术；当前的网络技术还没有发展到能够全自动地设置路由。 分组交换网络（例如互联网）将数据分割成许多带有完整目的地地址的分组，每个分组单独转送。而电路交换网络（例如公共交换电话网络）同样使用路由来找到一条路径，让接下来的数据能在仅带有部分目的地地址的情况下也能够抵达正确的目的地。 9 什么是网络安全网络安全（英语：Network Security）包含网络设备安全、网络信息安全、网络软件安全。 黑客通过基于网络的入侵来达到窃取敏感信息的目的，也有人以基于网络的攻击见长，被人收买通过网络来攻击商业竞争对手企业，造成网络企业无法正常营运，网络安全就是为了防范这种信息盗窃和商业竞争攻击所采取的措施。 参考资料 计算机网络 - Wikipedia （ https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C ） 计算机网络 - 百度百科 （ https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/18763 ） Computer Network - Wikipedia （ https://en.wikipedia.org/wiki/Computer_network ） Network Packet - Wikipedia （ https://en.wikipedia.org/wiki/Network_packet ） OSI模型 - Wikipedia （ https://zh.wikipedia.org/wiki/OSI模型 ）]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>计算机</tag>
        <tag>培训</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【开源】办公自动化探索：全库质检周报助手]]></title>
    <url>%2F2019%2F05%2F30%2F%E3%80%90%E5%BC%80%E6%BA%90%E3%80%91%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8E%A2%E7%B4%A2%EF%BC%9A%E5%85%A8%E5%BA%93%E8%B4%A8%E6%A3%80%E5%91%A8%E6%8A%A5%E5%8A%A9%E6%89%8B%2F</url>
    <content type="text"><![CDATA[众所周知，事务性工作是繁杂而琐碎的。像一些周报等定时需要做的工作，有时会让人焦头烂额，陷入文件整理和对比的泥潭。比如每周一需要出的全库质检周报，就需要核对全库质检情况跟踪表，并逐个检查SVN上各地区提交的最新质检报告。 那么，是否有一种方法可以让计算机辅助我们完成这项工作呢？ 答案是肯定的，我们的全库质检周报助手就呼之欲出了。 什么？全库质检和你没关系？别着急，它的一些原理你会觉得有用的。 开发环境 Python 3.7 Openpyxl模块 Windows 10 开发难点该工具需要我们去核对SVN文件夹，看各地区是否提交了质检报告。那么Python自带的OS模块就能完成这项任务。 我们还需要检查跟踪表，那么我们就需要处理Excel文件。Python中这类模块有很多，这次我们选用比较简单的Openpyxl模块。 功能实现目前工具已经完成了1.0版本的开发，实现的功能有自动检查全库质检跟踪表（xlsx格式）各部门各地区是否填写本周进展及自动检查SVN目录中各地区是否提交了最新质检报告。 目前还无法自动帮我们出具周报，但已经帮我们处理了最复杂的工作。我们只需要等待几秒，对着终端出具我们的周报就可以了。 源代码本工具开源，大家可自由研究和使用，禁止用作商业用途～ 请大家前往我的GitHub克隆代码仓库获取源代码。 不想看源代码，想直接使用编译过的工具的，请至本站下载页面下载。]]></content>
      <categories>
        <category>办公自动化</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>办公自动化</tag>
        <tag>全库质检</tag>
        <tag>DCTK</tag>
        <tag>开源</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + NexT进阶美化攻略]]></title>
    <url>%2F2019%2F05%2F29%2FHexo-NexT%E8%BF%9B%E9%98%B6%E7%BE%8E%E5%8C%96%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[前言本文将介绍部署Hexo博客并启用NexT主题后一些进阶的美化技巧。美化后具体效果可以参考本站。 在本文中，站点配置文件指的是博客根目录下的 _config.yml 文件，主题配置文件指的是博客根目录下 themes/next/_config.yml 文件。 目录 切换主题风格 配置菜单 配置动态背景 添加页眉GitHub页面跳转 配置RSS 修改文章底部标签样式 添加文章末尾“本文结束”说明 修改代码块样式 配置侧边栏社交图标 配置首页文章阴影效果 添加网站底部字数统计 配置网站图标 添加文章字数统计 隐藏底部Hexo、NexT信息 配置友情链接 配置文章底部版权信息 配置站内搜索 配置Live2D动画效果 切换主题风格安装NexT主题后，默认的主题风格为Muse。如要切换主题风格，打开主题配置文件，找到如下配置。 12345# Schemesscheme: Muse //默认主题#scheme: Mist#scheme: Pisces#scheme: Gemini 注释掉当前的scheme，将需要切换的主题风格取消注释，重新生成博客后即可完成切换。 配置菜单NexT主题默认只有两个菜单，首页和归档。 如果需要添加，在主题配置文件中，查找“menu:”配置项，将需要的菜单项取消注释。 如果需要添加的菜单项不在配置文件的预设菜单项中，则按照统一格式添加自定义菜单项，从Font Awesome网站寻找合适的图标，将图标名称写在“||”后。 完成菜单项的配置后，接下来需要添加新菜单项的页面。此处以 标签 菜单项为例。 打开终端定位到博客根目录，使用如下命令创建菜单项页面。 1hexo new page "tags" 然后编辑博客根目录下 source/tags/index.md 文件，在其头信息中添加以下信息。 1type: "tags" 配置动态背景在主题配置文件中，查找“canvas_nest:”配置项，将其值配置为true即可。 添加页眉GitHub页面跳转前往GitHub Corners网站，选择一款喜欢的挂饰，并拷贝其代码。 打开博客根目录下 themes/next/layout/_layout.swig 文件，定位到如下代码。 1&lt;div class="headband"&gt;&lt;/div&gt; 在其下方添加上挂饰的代码。 配置RSS打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install --save hexo-generator-feed 打开站点配置文件，并定位到如下代码。 12# Extensions## Plugins: http://hexo.io/plugins/ 在其下方添加如下代码。 1plugins: hexo-generate-feed 在主题配置文件中，查找“rss:”配置项，将其值配置为 /atom.xml 即可。 修改文章底部标签样式打开博客根目录下 themes/next/layout/_macro/post.swig 文件，查找“rel=”tag”&gt;#”。 将“#”替换为如下代码。 1&lt;i class="fa fa-tag"&gt;&lt;/i&gt; 添加文章末尾“本文结束”说明打开博客根目录下 themes/next/layout/_macro/ 目录，在其中新建 passage-end-tag.swig 文件。 使用文本编辑器在该文件中添加如下内容。 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 打开博客根目录下 themes/next/layout/_macro/post.swig 文件，在其 post-body 和 post-footer 之间（一般为 END POST BODY 段落后）添加如下代码。 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 在主题配置文件中，在任意行添加如下内容。 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 修改代码块样式打开博客根目录下 themes/next/source/css/_custom/custom.styl 文件，添加如下代码。 1234567891011121314code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 配置侧边栏社交图标在主题配置文件中，搜索“social:”，对其取消注释，并添加自己的社交账号，从Font Awesome网站寻找合适的图标，将图标名称写在“||”后。完成后配置示例如下。 1234567891011121314151617181920212223# Social Links.# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: GitHub: https://github.com/Jovany-Rong || github E-Mail: mailto:amphliegg@gmail.com || envelope 知乎: https://www.zhihu.com/people/rong-chen-fei/activities || book-open TapTap: https://www.taptap.com/user/4323230 || gamepad #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false 配置首页文章阴影效果打开博客根目录下 themes/next/source/css/_custom/custom.styl 文件，添加如下代码。 12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 添加网站底部字数统计打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install hexo-wordcount --save 打开博客根目录下 themes/next/layout/_partials/footer.swig 文件，在末尾添加如下代码。 1234&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 配置网站图标首先准备好自己需要用到的图标，共需要准备16 x 16及32 x 32两种规格的图标。图标可以从第三方网站（如阿里巴巴矢量图标库等)中下载。 将图片保存在博客根目录下 themes/next/source/images/ 目录中。 在主题配置文件中，搜索“favicon:”，将其中的 small 参数和 medium 参数值分别设为16 x 16及32 x 32两种规格图标的相对路径。 添加文章字数统计该功能需要用到添加网站底部字数统计中安装的依赖，安装过程在此不赘述。 在主题配置文件中，搜索“post_wordcount:”，配置修改为如下所示。 12345678# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true totalcount: true separated_meta: true 隐藏底部Hexo、NexT信息打开博客根目录下 themes/next/layout/_partials/footer.swig 文件，注释掉以下这段代码。 12345678910111213141516171819202122232425262728&lt;!--&lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% if theme.footer.powered %&#125; &lt;div class="powered-by"&gt;&#123;# #&#125;&#123;&#123; __('footer.powered', '&lt;a class="theme-link" target="_blank" href="https://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;&#123;% if theme.footer.theme.enable %&#125; &lt;div class="theme-info"&gt;&#123;# #&#125;&#123;&#123; __('footer.theme') &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next"&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.custom_text %&#125; &lt;div class="footer-custom"&gt;&#123;# #&#125;&#123;&#123; theme.footer.custom_text &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;--&gt; 配置友情链接在主题配置文件中，搜索“Blog rolls”，如下配置，即可添加友情链接。 1234567891011# Blog rollslinks_icon: linklinks_title: 友情链接#links_layout: blocklinks_layout: inline#links中配置成自己需要的友情链接地址links: GitHub: https://github.com/ 南京国图信息产业有限公司: http://www.gtmap.cn/ 南京国图协同办公平台: http://oa.gtis.com.cn/ 配置文章底部版权信息打开博客根目录下 themes/next/layout/_macro/ 目录，在其中新建 my-copyright.swig 文件。 使用文本编辑器在该文件中添加如下内容。 123456789101112131415161718192021222324252627282930&#123;% if page.copyright %&#125;&lt;div class="my_post_copyright"&gt; &lt;script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script src="https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"&gt;&lt;/script&gt; &lt;script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"&gt;&lt;/script&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;"&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href="/" title="访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;" title="&#123;&#123; page.title &#125;&#125;"&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class="copy-path" title="点击复制文章链接"&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="&#123;&#123; page.permalink &#125;&#125;" aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard('.fa-clipboard'); $(".fa-clipboard").click(function()&#123; clipboard.on('success', function()&#123; swal(&#123; title: "", text: '复制成功', icon: "success", showConfirmButton: true &#125;); &#125;); &#125;); &lt;/script&gt;&#123;% endif %&#125; 打开博客根目录下 themes/next/source/css/_common/components/post/ 目录，在其中新建 my-copyright.styl 文件。 使用文本编辑器在该文件中添加如下内容。 123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #b5b5b5; font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #a3d2a3; text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 打开博客根目录下 themes/next/layout/_macro/post.swig 文件，定位到如下代码。 12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include 'wechat-subscriber.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125; 在其上方添加如下代码。 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'my-copyright.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 打开博客根目录下 themes/next/source/css/_common/components/post/post.styl 文件，在其末尾添加如下代码。 1@import "my-post-copyright" 打开站点配置文件，搜索 URL ，配置为如下所示。 123456# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://wenmobo.github.io/ //你的网站地址root: /permalink: :year/:month/:day/:title/permalink_defaults: 以后写的Markdown文章头信息中，添加 copyright: true 即可。 配置站内搜索打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install hexo-generator-search --save 再安装另一个依赖。 1npm install hexo-generator-searchdb --save 在站点配置文件中，添加如下内容。 12345search: path: search.xml field: post format: html limit: 10000 在主题配置文件中，搜索 local_search: 配置项，将 enable 参数配置为 true 即可。 配置Live2D动画效果打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install --save hexo-helper-live2d 自己制作或从第三方下载需要的Live2D动画。 下载好之后将所有动画模板拷贝到博客根目录下node_modules目录中。 在站点配置文件中，添加如下配置。 1234567891011live2d: enable: true pluginModelPath: assets/ model: use: live2d-widget-model-epsilon2_1 #模板目录，在node_modules里 display: position: right width: 150 height: 300 mobile: show: false #是否在手机进行显示]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>攻略</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coding Pages绑定阿里云域名无法使用二级域名访问解决方案]]></title>
    <url>%2F2019%2F05%2F18%2FCoding-Pages%E7%BB%91%E5%AE%9A%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[问题描述在腾讯云开发者平台（原Coding.net平台）部署Pages静态网页，在设置中绑定了阿里云顶级域名ABC.com。在阿里云域名控制台中，ABC.com域名有两条解析记录，分别通过主机记录的 @和www解析到Pages应用访问地址（Username.coding.me）。 解析完成后，通过顶级域名ABC.com能够正常访问到我们的Pages应用，但通过二级域名www.ABC.com访问时报404错误。 原因分析与GitHub平台不同，腾讯云开发者平台Pages应用支持绑定多个域名，但不支持自动绑定顶级域名下的二级域名，需要手动增加二级域名的绑定才能生效。 解决方法在Pages设置中增加二级域名www.ABC.com的绑定。稍待片刻，即可正常访问应用。]]></content>
      <categories>
        <category>网络技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>域名</tag>
        <tag>问题解决</tag>
        <tag>Coding</tag>
        <tag>腾讯云开发者平台</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub Pages + Hexo + 阿里云域名无法访问解决方案]]></title>
    <url>%2F2019%2F05%2F17%2FGitHub-Pages-Hexo-%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[问题描述购入了阿里云域名（英文.com），且有自己的GitHub Pages个人网站。在GitHub中配置了Custom Domain为刚刚购买的域名（英文.com），但通过该域名无法访问个人网站，且直接访问github.io也自动跳转到域名而失效。 解决方法等待域名实名制审核成功，收到手机短信提醒后，在域名控制台中新增2条解析记录，分别如下配置。 记录类型 主机记录 解析线路 记录值 MX优先级 TTL 状态 CNAME @ 默认 英文.com – 10分钟 正常 CNAME www 默认 英文.com – 10分钟 正常 在Hexo的博客根目录下source文件夹中，新建CNAME文件（没有后缀名且必须大写），使用文本编辑器打开，输入 英文.com 。 重新部署Hexo。 等待域名解析完成后，即可使用新域名访问个人网站。]]></content>
      <categories>
        <category>网络技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>域名</tag>
        <tag>问题解决</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[EasyOM 1.0.1更新说明]]></title>
    <url>%2F2019%2F05%2F16%2FEasyOM-1-0-1%E6%9B%B4%E6%96%B0%E8%AF%B4%E6%98%8E%2F</url>
    <content type="text"><![CDATA[作者： 戎 晨飞（Jovany Rong） 一、更新内容一览 修复了在Windows 6.1平台（包括Windows 7系列和Windows Server 2008系列等操作系统）中，有空置光驱时会造成硬盘检查崩溃的问题； 新增整体运维报告输出功能，在首页点击“Check”按钮进行整体运维结束时，程序自动产生html格式的运维报告和eom格式的加密报文（eom报文供提交时使用），使运维结果更具可读性； 提升了在目标数据库过大时，数据库运维的性能，使其更不容易出现卡死的情况； 多处错误修复和文本优化。 二、更新适用对象本次更新推荐所有EasyOM用户更新。 三、更新方式1) 通过程序内关于-&gt;关于EasyOM中的Update按钮下载最新版本；2) 直接点击此处获取更新。 四、其他说明对本次更新及EasyOM工具有任何意见或建议，请联系技术及质量管理部。]]></content>
      <categories>
        <category>运维产品</category>
      </categories>
      <tags>
        <tag>EasyOM</tag>
        <tag>更新说明</tag>
        <tag>运维</tag>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
