<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[我的Django学习笔记（一）：第一个Django项目]]></title>
    <url>%2Fa%2Fe568.html</url>
    <content type="text"><![CDATA[Django是Python的Web应用模块中非常流行的一款。我的Django学习笔记系列博文将记录我学习使用Django的历程。 本系列博文将不定期更新，欢迎各位前来捧场。 本篇博文主要记录了Django环境准备、启动项目。 环境准备前置环境首先贴出系统环境和Python环境。 操作系统为MacOS 10.14.5。 Python环境为3.7.0。 Django安装使用pip安装django，代码如下。 1$ pip install django 安装完成后使用如下命令查看Django版本。 12345$ python&gt;&gt;&gt;import django&gt;&gt;&gt;django.VERSION 查到安装的Django版本为2.2.1，说明Django安装成功。 创建Django项目新建项目使用django-admin来创建新项目 HelloWorld ， 代码如下。 1$ django-admin startproject HelloWorld 查看项目目录结构，代码如下。 12345678910$ tree.├── HelloWorld│ ├── __init__.py│ ├── settings.py│ ├── urls.py│ └── wsgi.py└── manage.py1 directory, 5 files 该目录所有目录和文件的说明如下。 HelloWorld: 项目的容器。 manage.py: 一个实用的命令行工具，可让你以各种方式与该 Django 项目进行交互。 HelloWorld/init.py: 一个空文件，告诉 Python 该目录是一个 Python 包。 HelloWorld/settings.py: 该 Django 项目的设置/配置。 HelloWorld/urls.py: 该 Django 项目的 URL 声明; 一份由 Django 驱动的网站”目录”。 HelloWorld/wsgi.py: 一个 WSGI 兼容的 Web 服务器的入口，以便运行你的项目。 使用以下命令启动Django服务器。 1$ python manage.py runserver 0.0.0.0:8000 在浏览器访问 127.0.0.1:8000 ，出现 Django 页面。 配置视图及URL在项目目录中 HelloWorld 目录内新建 view.py 文件，并写入以下代码。 1234from django.http import HttpResponse def hello(request): return HttpResponse("Hello world ! ") 打开 urls.py 文件，删除原来代码，将以下代码复制粘贴到 urls.py 文件中。 1234567from django.conf.urls import url from . import view urlpatterns = [ url(r'^$', view.hello),] 目录结构如下。 123456789101112131415161718$ tree.├── HelloWorld│ ├── __init__.py│ ├── __pycache__│ │ ├── __init__.cpython-37.pyc│ │ ├── settings.cpython-37.pyc│ │ ├── urls.cpython-37.pyc│ │ ├── view.cpython-37.pyc│ │ └── wsgi.cpython-37.pyc│ ├── settings.py│ ├── urls.py│ ├── view.py│ └── wsgi.py├── db.sqlite3└── manage.py2 directories, 12 files 启动Django服务器，浏览器打开 127.0.0.1:8000 ，页面显示 Hello world ! 。 修改 urls.py 中的代码如下。 1234567from django.urls import path from . import view urlpatterns = [ path('hello/', view.hello),] 则在浏览器打开 127.0.0.1:8000/hello ，页面显示 Hello world ! 。 注意，Django无需重启，即可重新载入新的代码。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>BS开发</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络趣味小知识]]></title>
    <url>%2Fa%2F36ce.html</url>
    <content type="text"><![CDATA[作者：程 珊珊（Cheng Shanshan） 本文为授权转载，禁止任何人二次转载！ 趣味、知识，一个都不能少！通读此文，你会发现更大的世界。 一、介绍篇1、什么是计算机网络计算机网络，是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。 简单地说，计算机网络就是通过电缆、电话线或无线通讯将两台以上的计算机互连起来的集合。 计算机网络通俗地讲就是由多台计算机（或其它计算机网络设备）通过传输介质和软件物理（或逻辑）连接在一起组成的。总的来说计算机网络的组成基本上包括：计算机、网络操作系统、传输介质（可以是有形的，也可以是无形的，如无线网络的传输介质就是看不见的电磁波）以及相应的应用软件四部分。 2、计算机网络的结构组成一个完整的计算机网络系统是由网络硬件和网络软件所组成的。网络硬件是计算机网络系统的物理实现,网络软件是网络系统中的技术支持。两者相互作用,共同完成网络功能。 网络硬件：一般指网络的计算机、传输介质和网络连接设备等。 网络软件：一般指网络操作系统、网络通信协议等。 二、概念篇1、政务内网政务内网是涉密的党政机关办公业务网络，与国际互联网物理隔离，在满足工作需求的前提下，覆盖范围尽可能少，对上与国家电子政务内网互联。 实践使用： xx国土局办公内网，属于局域内网范畴。 2、政务专网政务专网是党政机关的非涉密内部办公网，主要用于机关非涉密公文、信息的传递和业务流转，它与外网之间不是通过传统的防火墙来隔离，而是通过网闸，仅以数据“摆渡”方式交换信息(网闸的HTTP、FTP、SMTP等通用协议全部关闭或不提供这些协议支持)，以便实现公共服务与内部业务流转的衔接。由于“摆渡”方式并不能使专网与国际互联网连接，因此，专网基本不受国际互联网不安全因素的威胁，具有较高的安全性。另外，政务专网不是涉密网，又可实现广泛的内部互联，还可与外网实现安全信息交换。因此，政务专网完全能够作为不涉及国家秘密的内部业务流转和信息处理的主要平台，并形成公共服务的外网受理、内(专)网办理、外网反馈的闭环机制。 实践使用： 10开头的国土专网，属于广域网范畴。 3、政务外网政务外网是政府对外服务的业务专网，与国际互联网通过防火墙逻辑隔离，主要用于机关访问国际互联网，发布政府公开信息，受理、反馈公众请求和运 行安全级别不需要在政务专网运营的业务。目前青岛市建设的政府公众信息网和政府门户网都属于这一范畴。但从严格意义上说，政府门户网又与政务外网有所区别。政府门户网是建立在互联网平台上的各级政务机关面向社会开展服务的电子政务窗口，它以政务外网信息资源为支撑并整合了各级政务部门的公众信息资源，推 进政务公开，扩大服务范围和对外宣传，开展政府与公众的沟通和交流，是政务信息服务的枢纽和接受社会监督的窗口，其主要作用是对外发布政务信息。 实践使用： 国土局门户网站，属于广域网范畴。 4、VPNVirtual Private Network，虚拟私人网络。VPN属于远程访问技术，简单地说就是利用公用网络架设专用网络。例如某公司员工出差到外地，他想访问企业内网的服务器资源，这种访问就属于远程访问。 实践使用： 苏州国土资源局的【土地动态巡查系统】使用的就是平板VPN连接国土局数据库服务器进行数据上报等工作。 5、防火墙防火墙（Firewall），也称防护墙，它是一种位于内部网络与外部网络之间的网络安全系统;是目前一种最重要的网络防护设备。从专业角度讲，防火墙是位于两个（或多个）网络间，实施网络之间访问控制的一组组件集合。一项信息安全的防护系统，依照特定的规则，允许或是限制传输的数据通过。 防火墙对流经它的网络通信进行扫描，这样能够过滤掉一些攻击，以免其在目标计算机上被执行。防火墙还可以关闭不使用的端口。而且它还能禁止特定端口的流出通信，封锁特洛伊木马。最后，它可以禁止来自特殊站点的访问，从而防止来自不明入侵者的所有通信。 实践使用： 有时候系统读取数据库的时候需要关闭防火墙，否则会造成数据库连接超时等情况。 6、网闸网闸（GAP）全称安全隔离网闸。安全隔离网闸是一种由带有多种控制功能专用硬件在电路上切断网络之间的链路层连接，并能够在网络间进行安全适度的应用数据交换的网络安全设备。安全隔离网闸是由软件和硬件组成。 隔离网闸分为两种架构，一种为双主机的2+1结构，另一种为三主机的三系统结构。2+1的安全隔离网闸的硬件设备由三部分组成:外部处理单元、内部处理单元、隔离安全数据交换单元。安全数据交换单元不同时与内外网处理单元连接，为2+1的主机架构。隔离网闸采用SU-Gap安全隔离技术，创建一个内、外网物理断开的环境。三系统的安全隔离网闸的硬件也由三部分组成：外部处理单元（外端机）、内部处理单元（内端机）、仲裁处理单元（仲裁机），各单元之间采用了隔离安全数据交换单元。 为什么要使用安全隔离网闸呢？其意义是： 当用户的网络需要保证高强度的安全，同时又与其它不信任网络进行信息交换的情况下，如果采用物理隔离卡，用户必须使用开关在内外网之间来回切换，不仅管理起来非常麻烦，使用起来也非常不方便，如果采用防火墙，由于防火墙自身的安全很难保证，所以防火墙也无法防止内部信息泄漏和外部病毒、黑客程序的渗入，安全性无法保证。在这种情况下，安全隔离网闸能够同时满足这两个要求，弥补了物理隔离卡和防火墙的不足之处，是最好的选择。 对网络地隔离是通过网闸隔离硬件实现两个网络在链路层断开，但是为了交换数据，通过设计的隔离硬件在两个网络对应的上进行切换，通过对硬件上的存储芯片的读写，完成数据的交换。 安装了相应的应用模块之后，安全隔离网闸可以在保证安全的前提下，使用户可以浏览网页、收发电子邮件、在不同网络上的数据库之间交换数据，并可以在网络之间交换定制的文件。 实践使用： “一张图”系统中涉及内网、专网、政务外网三合一时，大家耳熟能详的就是使用物理网闸来进行安全隔离。而“不动产登记系统”中涉及的与其他部门共享、外网申请等，也是建议使用物理网闸。 7、路由器路由器（Router），是连接因特网中各局域网、广域网的设备，它会根据信道的情况自动选择和设定路由，以最佳路径，按前后顺序发送信号。 路由器是互联网络的枢纽，”交通警察”。目前路由器已经广泛应用于各行各业，各种不同档次的产品已成为实现各种骨干网内部连接、骨干网间互联和骨干网与互联网互联互通业务的主力军。路由和交换机之间的主要区别就是交换机发生在OSI参考模型第二层（数据链路层），而路由发生在第三层，即网络层。这一区别决定了路由和交换机在移动信息的过程中需使用不同的控制信息，所以说两者实现各自功能的方式是不同的。 路由器（Router）又称网关设备（Gateway）是用于连接多个逻辑上分开的网络，所谓逻辑网络是代表一个单独的网络或者一个子网。当数据从一个子网传输到另一个子网时，可通过路由器的路由功能来完成。因此，路由器具有判断网络地址和选择IP路径的功能，它能在多网络互联环境中，建立灵活的连接，可用完全不同的数据分组和介质访问方法连接各种子网，路由器只接受源站或其他路由器的信息，属网络层的一种互联设备。 实践使用： 大家出差在外，会经常使用一根网线在墙上拉出来去连接一个路由器，然后从路由器中插入很多根网线去连接自己的电脑，然后配置内网ip即可上内网了。 路由器的作用在实际使用中明显可见了吧。 8、交换机交换机（Switch）意为“开关”是一种用于电（光）信号转发的网络设备。它可以为接入交换机的任意两个网络节点提供独享的电信号通路。最常见的交换机是以太网交换机。其他常见的还有电话语音交换机、光纤交换机等。 实践使用： 家用交换机主要起到线路连通的功用，比如你家里有三台电脑，希望组建一个局域网，那么每台电脑拉出一根网线到交换机上，那么这三台电脑就组成了一个网，可以相互连通和共享文件。路由器呢，它也可以当普通交换机使用，具备交换机的线路连通的功能。但是路由器还有个功能交换机没有，那就是拨号上网功能。你家里有三台电脑需要同时上网，猫就一个，怎么办，用路由器就能轻松解决，但是交换机不行。不过家用路由器一般都是4个口的，如果电脑过多，比如单位有几十台电脑，那么单靠路由是不行了，需要交换机来撑住场面，交换机一般有4口、8口、16口、24口，能接入更多的电脑。 所以，现在家用的话还是路由器比较多。 9、网关网关(Gateway)又称网间连接器、协议转换器。网关在网络层以上实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。网关既可以用于广域网互连，也可以用于局域网互连。 网关是一种充当转换重任的计算机系统或设备。使用在不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。与网桥只是简单地传达信息不同，网关对收到的信息要重新打包，以适应目的系统的需求。同层–应用层。 举例： 假设你的名字叫小不点(很小)，你住在一个大院子里，你的邻居有很多小伙伴，父母是你的网关。当你想跟院子里的某个小伙伴玩，只要你在院子里大喊一声他的名字，他听到了就会回应你，并且跑出来跟你玩。 但是你家长不允许你走出大门，你想与外界发生的一切联系，都必须由父母（网关）用电话帮助你联系。假如你想找你的同学小明聊天，小明家住在很远的另外一个院子里，他家里也有父母（小明的网关）。但是你不知道小明家的电话号码，不过你的班主任老师有一份你们班全体同学的名单和电话号码对照表，你的老师就是你的DNS服务器。于是你在家里和父母有了下面的对话： 小不点：妈妈(或爸爸),我想找班主任查一下小明的电话号码行吗？家长：好，你等着。（接着你家长给你的班主任挂了一个电话，问清楚了小明的电话）问到了，他家的号码是211.99.99.99 小不点：太好了！妈(或爸),我想找小明，你再帮我联系一下小明吧。 家长：没问题。（接着家长向电话局发出了请求接通小明家电话的请求，最后一关当然是被转接到了小明家家长那里，然后他家长把电话给转到小明）. 就这样你和小明取得了联系。 如果搞清了什么是网关，默认网关也就好理解了。就好像一个房间可以有多扇门一样，一台主机可以有多个网关。默认网关的意思是一台主机如果找不到可用的网关，就把数据包发给默认指定的网关，由这个网关来处理数据包。默认网关。默认网关一般填写192.168.x.1。 实践使用： 网关实质上是一个网络通向其他网络的IP地址。比如有网络A和网络B，网络A的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩码为255.255.255.0；网络B的IP地址范围为“192.168.2.1~192.168.2.254”，子网掩码为255.255.255.0。在没有路由器的情况下，两个网络之间是不能进行TCP/IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，TCP/IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机（如附图所示）。网络A向网络B转发数据包的过程。 所以说，只有设置好网关的IP地址，TCP/IP协议才能实现不同网络之间的相互通信。那么这个IP地址是哪台机器的IP地址呢？网关的IP地址是具有路由功能的设备的IP地址，具有路由功能的设备有路由器、启用了路由协议的服务器（实质上相当于一台路由器）、代理服务器（也相当于一台路由器）。 10、短信网关短信网关ISMG全称Internet Short Message Gateway，主要是为了解决各网络、各运营商之间的短信互通和SP的接入问题。它为应用单位收发短信而提供的一个动态数据交换平台系统。通过该系统的接口软件，可以将短信平台与各种系统和软件进行无缝高效相连，将应用单位的系统随时产生的动态信息转变成手机短信，通过梦网平台连接移动和联通的短信中心以端口特服号码进行实时中发送和接受，为各种系统（或软件）建立一个快速的短信双向（或单向）通道，以便手机用户采用短信方式与SP双向通信，接收SP提供的信息服务。 实践使用： 移动GSM卡发短信给联通CDMA手机卡，当两个网络间的协议不一样时，两个SMSC之间需要利用短信网关来进行沟通，短信从短信发送方的SMSC经过短信网关传送到目标smsc。 11、DNSDNS（Domain Name System，域名系统），因特网上作为域名和IP地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。通过主机名，最终得到该主机名对应的IP地址的过程叫做域名解析（或主机名解析）。 每个IP地址都可以有一个主机名，主机名由一个或多个字符串组成，字符串之间用小数点隔开。有了主机名，就不要死记硬背每台IP设备的IP地址，只要记住相对直观有意义的主机名就行了。这就是DNS协议所要完成的功能。 举例： 人们一般记忆域名网址比较方便（记忆IP地址的字符串几乎是不可能完成的任务），比如：jingyan.baidu.com就是百度经验的域名，而与之对应的IP地址则是：180.149.131.88（机器能够直接读取），这个域名和IP地址相互映射、解析的工作是由DNS服务器来完成的。 实践使用： 以解析www.abc.com域名为例。当系统需要调用www.abc.com主机的资料时，发送一个查询www.abc.com域名的指令。 因为系统中存在一个hosts文件，可以用来解析域名。在系统中，一般是先查找hosts文件，如果在hosts文件中发现www.abc.com记录，则直接返回结果。 如果hosts文件中没有发现该记录，则把查询指令转发到系统中指定的域名服务器，进行DNS查询。 指定域名服务器在自己的缓存中查找相应的域名记录，如果存在该记录，则返回结果；否则，把这个查询指令转发到根域名服务器。 在根域名服务器的记录中，根据递归查询的规则，只能返回顶级域名com，并且把能够解析com的域名服务器的地址告诉客户机。 客户机根据返回的信息，继续向com域名服务器发送递归请求，收到请求的、能够正确返回abc.com域名信息的域名服务器，再把相关信息返回给客户机。 客户机再次向abc.com的域名服务器发送递归请求，收到请求的服务器再次进行解析；该服务器已经能够把www.abc.com域名完全解析到一个IP地址，并把这个IP地址返回。 12、TCP/IP 协议Transmission Control Protocol/Internet Protocol的简写，中译名为传输控制协议/因特网互联协议，又名网络通讯协议，是Internet最基本的协议、Internet国际互联网络的基础，由网络层的IP协议和传输层的TCP协议组成。 从协议分层模型方面来讲，TCP/IP由四个层次组成：网络接口层、网络层、传输层、应用层。 （1）网络层网络层包括：IP(Internet Protocol）协议、ICMP(Internet Control Message Protocol) 控制报文协议、ARP(Address Resolution Protocol）地址转换协议、RARP(Reverse ARP)反向地址转换协议。 IP是网络层的核心，通过路由选择将下一条IP封装后交给接口层。IP数据报是无连接服务。 ICMP是网络层的补充，可以回送报文。用来检测网络是否通畅。 Ping命令就是发送ICMP的echo包，通过回送的echo relay进行网络测试。 ARP是正向地址解析协议，通过已知的IP，寻找对应主机的MAC地址。 RARP是反向地址解析协议，通过MAC地址确定IP地址。比如无盘工作站还有DHCP服务。 （2）传输层提供应用程序间的通信。其功能包括：一、格式化信息流；二、提供可靠传输。为实现后者，传输层协议规定接收端必须发回确认，并且假如分组丢失，必须重新发送，即耳熟能详的“三次握手”过程，从而提供可靠的数据传输。 传输层协议主要是：传输控制协议TCP(Transmission Control Protocol）和用户数据报协议UDP(User Datagram protocol）。 （3）应用层应用层协议主要包括如下几个：FTP、TELNET、DNS、SMTP、RIP、NFS、HTTP。 实践使用：大家经常配置的应该就是TCP/IPv4了，网络管理员给每位一个ip地址，需要大家手动配置IP地址、子网掩码、默认网关等信息即可连接内网或外网。 13、FTPFTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于Internet上的控制文件的双向传输。同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。在FTP的使用当中，用户经常遇到两个概念：”下载”（Download）和”上传”（Upload）。”下载”文件就是从远程主机拷贝文件至自己的计算机上；”上传”文件就是将文件从自己的计算机中拷贝至远程主机上。用Internet语言来说，用户可通过客户机程序向（从）远程主机上传（下载）文件。 实践使用： 下载一个ftp小工具，进行本机与服务器之间数据传输。 14、*.batbat文件是dos下的批处理文件。批处理文件是无格式的文本文件，它包含一条或多条命令。它的文件扩展名为 .bat 或 .cmd。在命令提示下键入批处理文件的名称，或者双击该批处理文件，系统就会调用cmd.exe按照该文件中各个命令出现的顺序来逐个运行它们。使用批处理文件（也被称为批处理程序或脚本），可以简化日常或重复性任务。 实践使用： 一般我们进行Oracle数据库逻辑备份的时候，经常自己写备份数据库脚本文件，文件格式为.bat，然后将此文件添加windows计划列表定时触发以达到备份数据库的效果。 15、软路由软路由是指利用台式机或服务器配合软件形成路由解决方案，主要靠软件的设置，达成路由器的功能；而硬路由则是以特有的硬设备，包括处理器、电源供应、嵌入式软件，提供设定的路由器功能。 实践使用： 在局方内网与外网逻辑隔离的情况下，我们经常使用和添加软路由去进行内外网互联的操作，方便办公与数据处理在一台电脑上进行。 软路由添加语句如下： 第一步：route delete 0.0.0.0 第二步：route add 0.0.0.0 mask 0.0.0.0 192.168.0.1 第三步：route add 10.0.0.0 mask 255.0.0.0 10.5.29.1 16、等保信息安全等级保护是对信息和信息载体按照重要性等级分级别进行保护的一种工作，在中国、美国等很多国家都存在的一种信息安全领域的工作。在中国，信息安全等级保护广义上为涉及到该工作的标准、产品、系统、信息等均依据等级保护思想的安全工作；狭义上称为的一般指信息系统安全等级保护，是指对国家安全、法人和其他组织及公民的专有信息以及公开信息和存储、传输、处理这些信息的信息系统分等级实行安全保护，对信息系统中使用的信息安全产品实行按等级管理，对信息系统中发生的信息安全事件分等级响应、处置的综合性工作。 信息安全等级保护工作包括定级、备案、安全建设和整改、信息安全等级测评、信息安全检查五个阶段，作为公安部授权的第三方测评机构，为企事业单位提供免费专业的信息安全等级测评咨询服务。 信息系统安全等级测评是验证信息系统是否满足相应安全保护等级的评估过程。信息安全等级保护要求不同安全等级的信息系统应具有不同的安全保护能力，一方面通过在安全技术和安全管理上选用与安全等级相适应的安全控制来实现；另一方面分布在信息系统中的安全技术和安全管理上不同的安全控制，通过连接、交互、依赖、协调、协同等相互关联关系，共同作用于信息系统的安全功能，使信息系统的整体安全功能与信息系统的结构以及安全控制间、层面间和区域间的相互关联关系密切相关。因此，信息系统安全等级测评在安全控制测评的基础上，还要包括系统整体测评。 实践使用： 很多局方领导重视信息安全问题，但是很多局方需要自己进行信息安全等级保护工作到位，而不是仅仅依赖我们建议配置的硬件设备。 三、命令篇基于windows操作系统，将常用的网络命令总结如下： 1、ping主要是测试本机TCP/IP协议配置正确性与当前网络现状。 ping命令的基本使用格式是： ping IP地址/主机名/域名 [-t] [-a] [-n count] [-l size] -t：连续对IP地址/主机名/域名执行Ping命令，直到被用户以Ctrl+C中断。 -a：以IP地址格式显示目标主机网络地址，默认选项。 -n count：指定要Ping多少次，具体次数由count来指定，默认值为4。 -l size：指定Ping命令中发送的数据长度，默认值是32字节。 2、netstat主要是帮助了解整体网络情况以及当前连接情况。 基本使用命令格式：netstat [-n] [-a] [-e] [-r][-s] -n：显示所有已建立的有效连接。 -s：本选项能够按照各个协议分别显示其统计数据。如果应用程序（如Web浏览器）运行速度比较慢，或者不能显示Web页之类的数据，那么我们就可以用本选项来查看一下所显示的信息.我们需要仔细查看统计数据的各行，找到出错的关键字，进而确定问题所在。 -e：本选项用于显示关于以太网的统计数据。它列出的项目包括传送的数据报的总字节数、错误数、删除数、数据报的数量和广播的数量。这些统计数据既有发送的数据报数量，也有接收的数据报数量。（这个选项可以用来统计一些基本的网络流量） -r：本选项可以显示关于路由表的信息，除了显示有效路由外，还显示当前有效的连接。 -a：本选项显示一个所有的有效连接信息列表，包括已建立的连接（ESTABLISHED），也包括监听连接请求（LISTENING）的那些连接。 3、nbtstat该命令使用TCP/IP上的NetBIOS显示协议统计和当前TCP/IP连接，使用这个命令你可以得到远程主机的NETBIOS信息，比如用户名、所属的工作组、网卡的MAC地址等。在此我们就有必要了解几个基本的参数。 基本使用命令格式：nbtstat [-a] [-A] [-n] -a：使用这个参数，只要你知道了远程主机的机器名称，就可以得到它的NETBIOS信息。如图3。 -A：这个参数也可以得到远程主机的NETBIOS信息，但需要你知道它的IP。 -n：列出本地机器的NETBIOS信息。 4、ipconfig主要是了解当前TCP/IP协议所设置的值，如IP地址、子网掩码、缺省网关、Mac地址等。 基本使用方法：ipconfig [/all/release/renew] ipconfig：当不带任何参数选项，那么它为每个已经配置了的接口显示IP地址、子网掩码和缺省网关值. /all：当使用all选项时，能为DNS和WINS服务器显示它已配置且所要使用的附加信息（如IP地址等），并且显示内置于本地网卡中的物理地址（MAC）.如果IP地址是从DHCP服务器租用的，它会显示DHCP服务器的IP地址和租用地址预计失效的日期。 /release &amp; /renew ：这是两个附加选项，只能在向DHCP服务器租用其IP地址的计算机上起作用.如果我输入ipconfig/release，那么所有接口的租用IP地址便重新交付给DHCP服务器（归还IP地址）.如果输入ipconfig /renew，那么本地计算机便设法与 DHCP服务器取得联系，并租用一个IP地址.请注意，大多数情况下网卡将被重新赋予和以前所赋予的相同的IP地址。 4、route主要用于配置路由与查看当前路由情况。 基本使用方法：route [print] [add] [change] [delete] print：主要是打印当前路由情况。 add：手动添加路由或配路由，例子如下： route ADD 157.0.0.0 MASK 255.0.0.0 157.55.80.1 METRIC 3 IF 2 destination（目标地址） mask gateway metric Interface(接口) change：只用于修改网关和/或跃点数。例子如下： route CHANGE 157.0.0.0 MASK 255.0.0.0 157.55.80.5 METRIC 2 IF 2 delete：删除路由。例子如下： route DELETE 157.0.0.0 5、tracerttrace router的缩写，为路由跟踪命令。 主要用于显示将数据包从计算机传递到目标位置的一组IP路由器，以及每个跃点所需的时间(即跟踪数据报传送路径),测试网络连通性问题。 基本用法: tracert [-d] [-h maximum_hops] [-j host-list] [-w timeout] [-R] [-S srcaddr] [-4] [-6] target_name(目标IP、URL或域名) 选项: -d 不将地址解析成主机名。 -h maximum_hops 搜索目标的最大跃点数。 -j host-list 与主机列表一起的松散源路由(仅适用于 IPv4)。 -w timeout 等待每个回复的超时时间(以毫秒为单位)。 -R 跟踪往返行程路径(仅适用于 IPv6)。 -S srcaddr 要使用的源地址(仅适用于 IPv6)。 -4 强制使用 IPv4。 -6 强制使用 IPv6。 6、ARPAddress Resolution Protocol，地址解析协议，是获取物理地址的一个TCP/IP协议.主要用来查看本地计算机或另一台计算机的ARP高速缓存中的当前内容。 基本使用方法：arp [-a/g] [-s] [-d] -a：用于查看高速缓存中的所有项目,-a和-g参数的结果是一样的。 -s：向ARP高速缓存中人工输入一个静态ARP项目。 -d：删除ARP高速缓存中的内容。 四、实战篇1、测试本机网卡是否可用当遇到上不了网的情况时，第一反应即是本机网卡是否可用。点【开始】【运行】，输入cmd并回车。输入命令ping 127.0.0.1，如ping结果如下图所示，则网卡正常。 注：TTL是IP协议包中的一个值，你的PING包在每经过一个节点，不同的操作系统，它的TTL值默认值是不相同的。默认情况下，Linux系统的TTL值为64或255，Windows NT/2000/XP系统的TTL值为128，Windows 98系统的TTL值为32，UNIX主机的TTL值为255。 一般PING内网的XP主机TTL=128，路由器就不一样了，有64，有255等，而且TTL数值是可以改的，这个数值并不能说明什么，也不存在封端口了。 2、看本机IP相关信息在确认本地网卡正常的前提下，查看本地网卡的IP地址，子网掩码，默认网关，DNS服务器地址等是否正常。点【开始】【运行】，输入cmd并回车。输入命令ipconfig /all以查看。如无IP地址、无网关、无DNS服务器或全无等情况，则需要您手动配置。 3、确认远程服务是可用的当你打不开网页时，你可以ping一下域名，以确认该www服务可用。通常情况下都是能ping的，如下图ping baidu.com。如果ping不通，你可以试着ping其它域名。如果所有的域名都不通，但是QQ还能登陆，看第二步。 当所有的域名ping都不通，但是QQ还能登陆。这个时个你得确认下，你的DNS服务器是否可用。点【开始】【运行】，输入cmd并回车。输入nslookup baidu.com，如果有地址显示，则DNS正常。如果没有，则DNS非正常。你可以尝试着配置可用的DNS地址。下图所示，上面是不正常的情况，下面是正常情况。 4、复杂网络环境下查网络故障如果你所处的网络环境比较复杂，可以通过tracert命令确认数据包流向及故障发生点。点【开始】【运行】，输入cmd并回车。输入tracert baidu.com，如果跟踪到域名映射的服务器地址，那么说明网络没有问题，如下图所示。如没有跟踪到域名映射的服务器地址，那么在哪里断的就是哪里的问题。 5、重新获取地址当你的Ip使用自动获取时，遇到上不了网的情况，可以考虑下重新获取地址。点【开始】【运行】，输入cmd并回车。输入ipconfig /release，回车，先释放现有地址。 再输入ipconfig /renew，再获取新地址。 6、外网访问内网的相关知识 （1）网关或路由器对内部向外发出的信息不会进行拦截，但对来自外部想进入内部网络的信息则会进行识别、筛选，认为是安全的、有效的，才会转发给内网电脑。正是这种情况的存在，才导致了很多内网BT用户没有“远程”，速度也不尽如人意。 （2）端口映射：内网的一台电脑要上因特网对外开放服务或接收数据，都需要端口映射。 端口映射分为动态和静态.动态端口映射：内网中的一台电脑要访问新浪网，会向NAT网关发送数据包，包头中包括对方(就是新浪网)IP、端口和本机IP、端口，NAT网关会把本机IP、端口替换成自己的公网的IP、一个未使用的端口，并且会记下这个映射关系，为以后转发数据包使用。然后再把数据发给新浪网，新浪网收到数据后做出反应，发送数据到NAT网关的那个未使用的端口，然后NAT网关将数据转发给内网中的那台电脑，实现内网和公网的通讯.当连接关闭时，NAT网关会释放分配给这条连接的端口，以便以后的连接可以继续使用。 动态端口映射其实也就是NAT网关的工作方式。 静态端口映射：就是在NAT网关上开放一个固定的端口，然后设定此端口收到的数据要转发给内网哪个IP和端口，不管有没有连接，这个映射关系都会一直存在。就可以让公网主动访问内网的一个电脑。 （3）如何检测自己是内网还是外网 有两种做法：①：查看你自己机器的IP，如果是192.168.x.x或者10.48.x.x，一般就是内网地址。②:访问这个网址：http://www.ip138.com/看看网页上的地址跟你机器上的地址是否相同，如果不同，就说明你处于内网。如果用路由器上网基本可以肯定你的地址是内网的。 （4）VPN：Virtual Private Network，虚拟私人网络 虚拟私人网络就像：甲公司某部门的A想寄信去乙公司某部门的B。A已知B的地址及部门，但公司与公司之间的信不能注明部门名称。于是，A请自己的秘书把指定B所属部门的信（A可以选择是否以密码与B通信）放在寄去乙公司地址的大信封中。当乙公司的秘书收到从甲公司寄到乙公司的信件后，该秘书便会把放在该大信封内的指定部门信件以公司内部邮件方式寄给B。同样地，B会以同样的方式回信给A。 （5）Windows端口映射 实现外网访问内网由于公网IP地址有限，不少ISP都采用多个内网用户通过代理和网关路由共用一个公网IP上INTERNET的方法，这样就限制了这些用户在自己计算机上架设个人网站，要实现在这些用户端架设网站，最关键的一点是，怎样把多用户的内网IP和一个他们唯一共享上网的IP进行映射。 7、监测网络、数据库卡死问题参考如下：（张家港不动产登记信息系统） （1）、网络监测：每天上班都要进行 监测方法：打开cmd控制台，输入：ping 172.169.10.2 -t （2）、前台监测： 测试方法： 1、安装JDK； 2、配置JDK环境变量； 3、visualvm.bat放到Tomcat下并运行； 4、检测cpu、内存使用情况； 5、查看用户在线数：早上10点、11点，下午2点、4点，并记录下出现系统卡的时候在线人数多少。（http://ip:port/platform/online.action）进行不动产登记系统及后台运行服务器性能监测，将同一时间卡着的运行参数截图. （3）、后台数据库监测： 监测方法： 打开plsql，进入工具-sessions-locks，点击刷新，看看卡着的时候，那个进程一直不动，是否锁住，截图。 8、应用服务器与各个分开数据库部署方案利弊关系情况1、数据库各个分局都各自部署自己的数据库，但是应用服务器统一架设在市局一台服务器上。 有利： （1）部署方式简单，只需要部署一台应用服务器； （2）版本控制简单，开发修改后的文件更新一次即可； 弊端： （1）风险较大，如果硬件或者网络出现故障，整个苏州市不动产登记系统都不能用； （2）系统都部署在市局一台服务器上，服务器配置要求高，并且负载严重，负荷重； 情况2、数据库各个分局都各自部署自己的数据库，但是应用服务器分别部署在分局自己的应用服务器上。 有利： （1）风险较小，如果硬件或者网络出现故障，各个分局不动产登记系统互不影响； （2）系统分别部署在各分局自己的服务器上，系统负载情况无太大要求； 弊端： （1）部署需要每分局都部署一套市局统一的不动产应用系统，需要分别部署分局自己的应用服务器，各分局给出服务器设备； （2）版本控制稍微复杂，开发修改后的文件各分局服务器上都要更新一次； 情况3、数据库各个分局都各自部署自己的数据库，但是市局服务器上部署四区系统，县市分局各自在自己的应用服务器上部署市局统一的不动产登记系统。 有利： （1）县市分局风险较小，如果硬件或者网络出现故障，县市各个分局不动产登记系统互不影响；但是市局服务器或者网络出现故障，四区不动产登记系统将受干扰。 （2）分别部署在各县市分局和市区自己的服务器上，系统负载情况无太大要求； 弊端： （1）部署需要每分局都部署一套市局统一的不动产应用系统，需要分别部署分局自己的应用服务器，各分局给出服务器设备；（2）版本控制稍微复杂，开发修改后的文件各县市分局服务器上都要更新一次系统，市区服务器上也要更新一次。]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>计算机</tag>
        <tag>培训</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[项目现场实施/运维人员常用计算机网络技术]]></title>
    <url>%2Fa%2Fa42e.html</url>
    <content type="text"><![CDATA[上世纪中期以来，计算机网络已经越来越成为人类社会必不可少的基础设施。当前，我们日常生活和工作几乎离不开计算机网络，无论是“万物互联”的互联网，还是承载各类系统、数据库的专网、内网，都扮演了极为重要的角色。 那么，在我们软件项目现场实施或运维过程中，都需要掌握哪些基本的计算机及网络技能呢？ 1 查看计算机IPWindows打开命令行窗口（cmd或PowerShell），执行以下命令。 1ipconfig Linux / MacOS打开终端（Terminal或Term2等），执行以下命令。 1ifconfig 2 测试IP或域名是否连通注意，目标机器防火墙必须允许回显。 Windows打开命令行窗口（cmd或PowerShell），执行以下命令。 1ping 192.168.1.1 其中将 192.168.1.1 更改为目标的IP地址或域名。 Linux / MacOS打开终端（Terminal或Term2等），执行以下命令。 1ping 192.168.1.1 其中将 192.168.1.1 更改为目标的IP地址或域名。 需要使用快捷键 Ctrl+C 中止命令，否则 ping 命令将持续执行。 3 测试目标计算机某端口是否开启注意，该方法使用Telnet，必须保证计算机已安装Telnet服务。 根据操作系统，打开命令行窗口或终端窗口，执行以下命令。 1telnet 192.168.1.1 8080 其中将 192.168.1.1 8080 更改为目标的IP/域名及端口号。 4 查看计算机路由Windows打开命令行窗口（cmd或PowerShell），执行以下命令。 1route print Linux打开终端（Terminal），执行以下命令。 1route MacOS打开终端（Terminal或Term2等），执行以下命令。 1netstat -nr 5 添加路由Windows打开命令行窗口（cmd或PowerShell），执行以下命令。 1route add 192.168.1.0 mask 255.255.255.0 192.168.1.1 其中将 192.168.1.0 更改为目标网段的IP， 255.255.255.0 更改为子网掩码， 192.168.1.1 更改为网关。 Linux打开终端（Terminal），执行以下命令。 1route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.1.1 其中将 192.168.1.0 更改为目标网段的IP， 255.255.255.0 更改为子网掩码， 192.168.1.1 更改为网关。 MacOS打开终端（Terminal或Term2等），执行以下命令。 1route add 192.168.1.0 -netmask 255.255.255.0 192.168.1.1 其中将 192.168.1.0 更改为目标网段的IP， 255.255.255.0 更改为子网掩码， 192.168.1.1 更改为网关。 6 远程桌面6.1 RDP该方式受控端只支持Windows，需要其打开3389端口。 Windows To Windows通过Windows自带的远程桌面工具完成。 主控端输入快捷键 Ctrl + R 调出 运行 对话框，在其中输入 mstsc 打开远程桌面工具。 输入连接参数，即可完成远程桌面连接。 MacOS To Windows通过Microsoft开发的 Microsoft Remote Desktop 应用程序完成。 该应用程序尚未在中国Mac App Store上架。 在Mac上登录美国地区Apple ID。 在Mac App Store中搜索 Microsoft Remote Desktop 应用程序并下载安装。 打开该应用程序，输入连接参数，即可完成远程桌面连接。 iOS/Android To Windows通过Microsoft开发的 Microsoft Remote Desktop 应用程序完成。 在手机应用商店（App Store、Play Store等）中搜索 Microsoft Remote Desktop 应用程序并下载安装。 打开该应用程序，输入连接参数，即可完成远程桌面连接。 6.2 Teamviewer该工具支持全平台。非商业用途免费，商业用途需付费。 受控端需安装Teamviewer软件或直接运行，若为安装版本还可配置无人值守。 主控端需安装Teamviewer软件，输入受控端的ID和密码即可完成。 在受控端设置中，还可开启使用IP地址作为ID，供内网使用。 6.3 SSH通过SSH2协议进行远程连接。 该方式支持全平台，要求受控端开启SSH服务，但仅支持命令行界面。这是我们远程Linux服务器的主要方式。 主控端若为Linux或MacOS，打开终端就能使用SSH进行远程连接。 主控端若为Windows，可安装第三方软件（PuTTY、XShell等）进行SSH连接。 7 Windows文件共享在Windows计算机中，可对某个目录设置共享，并配置用户权限。使用该功能需打开445端口。 另一台Windows计算机可以输入快捷键 Ctrl + R 调出 运行 对话框，在其中输入 //IP地址 访问该IP对应计算机的共享文件。 特殊地，通过输入 //IP地址/d$ 访问该IP对应计算机D盘中的所有文件。 另一台Linux或MacOS计算机则可以在文件系统管理器中找到局域网中的计算机来访问共享文件。 8 FTP文件传输协议 （FTP）是一套用于文件传输的标准协议。 8.1 搭建FTP服务器Windows在Windows计算机中，打开IIS管理器。 在IIS管理器中新建FTP站点。输入站点名称和根目录，并绑定本机IP地址和21端口，再配置权限即可完成FTP服务器的搭建。 Linux在Linux计算机中，搭建FTP服务器要稍微复杂一些。 首先通过yum等包管理器安装vsftpd，代码如下。 1yum -y install vsftpd 创建FTP用户，代码如下。 1useradd -s /sbin/nologin -d /home/ftp ftp 为 ftp 用户创建密码，代码如下。 1passwd ftp 编辑 /etc/vsftpd/vsftpd.conf 文件，将配置项 anonymous_enable 的值修改为NO，禁止匿名登录。 启动FTP服务，代码如下。 1systemctl start vsftpd.service 8.2 FTP客户端连接客户端建议使用FileZilla、FlashFXP等第三方客户端连接FTP服务器。 9 SFTP安全文件传输协议 （SFTP）也是一套用于文件传输的标准协议，它比FTP协议更安全。 9.1 搭建SFTP服务器Windows首先安装 freeSSHd 软件，安装过程在此不赘述。 安装完成后打开软件，在 SSH 标签页中取消勾选 Start SSH server on freeSSHd startup 和 Use new console engine ；再在 Telnet 标签页中取消勾选 Start Telnet server on freeSSHd startup 。 在 Users 标签页中添加用户设置，并在 Authentication 标签页中选择密码验证和公钥验证，最后在 SFTP 标签页中选择根目录。 启动SSH服务即可。 Linux大部分系统原生支持SSHd服务，可以直接使用。 9.2 FTP客户端连接客户端建议使用FileZilla、FlashFXP等第三方客户端连接SFTP服务器。 10 SVNSVN是一个开源的版本控制系统，也是目前我们公司使用的版本控制系统。这里主要介绍一下如何连接SVN服务器进行使用。 10.1 客户端选择Windows计算机可以安装 TortoiseSVN ，Mac计算机可在Mac App Store中下载 SnailSVN Lite 。 10.2 使用方法使用各个客户端都大同小异。下面介绍几种常见用法。 SVN Checkout：检出，迁出SVN配置库的内容。相当于Git中的克隆功能，适用于在本地新建SVN目录。 SVN Update：更新，从SVN配置库中更新本地文件，适用于本地SVN目录版本较旧需要更新成SVN配置库中的文件版本。 SVN Commit：提交，将本地目录文件提交到SVN配置库中，适用于本地文件较新需要提交到服务器的情况。注意，建议每一次提交都撰写相应的备注，养成良好的版本管理习惯。 11 GitGit是另一个开源的版本控制系统，也是世界上最流行的版本控制系统。它与SVN最大的区别就是支持本地版本管理。这里主要介绍一下如何使用本地Git客户端及GitHub。 11.1 客户端安装Git支持全平台，在其 官方网站 可以下载对应版本的Git软件。 11.2 创建版本库创建一个空目录，并将命令行窗口或终端窗口定位到该目录下。 执行如下代码创建Git版本库。 1git init 11.3 将文件添加到版本库例如我们新建了一个说明文件 readme.md ，现在想将它添加到Git版本库，执行如下代码。 1git add readme.md 特别地，如果要将目录下所有文件添加到版本库，执行如下代码。 1git add . 再执行如下代码将刚才的add操作提交。 1git commit -m "hello world" 其中 hello world 可替换成想要的备注。 11.4 添加GitHub远程仓库在 GitHub 中，注册或登录自己的账号，为了方便描述，这里将用户名暂定为 Your-Name ，执行代码时需将其改为自己的用户名。 在GitHub页面右上角找到 Create a new repo 按钮，创建一个新的仓库，这里仓库名暂定为 learngit 。 在本地仓库中，执行如下代码添加远程仓库。 1git remote add origin git@github.com:Your-Name/learngit.git 第一次推送远程仓库时，使用如下命令。 1git push -u origin master 以后再推送远程仓库时，使用如下命令。 1git push origin master 12 NASNAS被定义为一种特殊的专用数据存储服务器，包括存储器件（例如磁盘阵列、CD/DVD驱动器、磁带驱动器或可移动的存储介质）和内嵌系统软件，可提供跨平台文件共享功能。NAS通常在一个LAN上占有自己的节点，无需应用服务器的干预，允许用户在网络上存取数据，在这种配置中，NAS集中管理和处理网络上的所有数据，将负载从应用或企业服务器上卸载下来，有效降低总拥有成本，保护用户投资。 简单地说，NAS和网盘类似，只不过这个网盘是我们自己搭建的，主动权掌握在我们自己手里。 目前市面上常见的NAS品牌有Synology（群晖）、Buffalo（巴法络）、QNAP（威联通）等。 对自建NAS有兴趣的同学，请参考 这篇博文 进行搭建。 13 防火墙所谓防火墙指的是一个由软件和硬件设备组合而成、在内部网和外部网之间、专用网与公共网之间的边界上构造的保护屏障.是一种获取安全性方法的形象说法，它是一种计算机硬件和软件的结合，使Internet与Intranet之间建立起一个安全网关（Security Gateway），从而保护内部网免受非法用户的侵入，防火墙主要由服务访问规则、验证工具、包过滤和应用网关4个部分组成，防火墙就是一个位于计算机和它所连接的网络之间的软件或硬件。该计算机流入流出的所有网络通信和数据包均要经过此防火墙。 在网络中，所谓“防火墙”，是指一种将内部网和公众访问网（如Internet）分开的方法，它实际上是一种隔离技术。防火墙是在两个网络通讯时执行的一种访问控制尺度，它能允许你“同意”的人和数据进入你的网络，同时将你“不同意”的人和数据拒之门外，最大限度地阻止网络中的黑客来访问你的网络。换句话说，如果不通过防火墙，公司内部的人就无法访问Internet，Internet上的人也无法和公司内部的人进行通信。 注意，在任何时候不建议关闭防火墙！需要时开启相应端口即可。 13.1 Windows防火墙本例中以在Winodows计算机中配置防火墙，使其他计算机能通过3306端口访问这台计算机为例。 首先打开防火墙设置界面。 依次点击这些按钮：入站规则-&gt;新建规则-&gt;自定义-&gt;下一步-&gt;所有程序 。 选择协议类型为 TCP ，本地端口选择 特定端口 ，并填写 3306 ，在点击 下一步 。 选择此规则应用于的远程IP。选择 下列IP地址-&gt;添加 ，输入允许访问本地3306端口的IP。 一路下一步，配置一个简明的规则名称，如 MySQL访问 ，最后点击 完成 。 13.2 Linux防火墙由于不同的Linux版本采用的防火墙版本不同，这里以在CentOS 6中开放3306端口为例。 在终端中输入如下命令开启3306端口。 1iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT 输入如下命令，保存防火墙设置。 1service iptables save 输入如下命令，重新启动防火墙。 1service iptables restart 14 病毒防护WindowsWindows相对是计算机病毒最泛滥的平台，因此建议在保证防火墙开启的前提下，安装杀毒软件。项目现场如果客户已经购买了企业级杀毒软件，一定要定期查杀病毒。 个人版杀毒软件可以根据个人喜好安装 火绒 、 360 等。 同时，由于近年来勒索病毒肆虐，一定要检查计算机的危险端口（如3389、445、139等）在不必要时保持关闭。 Linux/MacOS确保防火墙时刻开启并正确配置可免受大部分木马和病毒的侵扰。 15 加密及数字签名加密算法主要有两种，对称加密和非对称加密。 对称加密：加密和解密的密钥一样，比如用123加密就是用123解密，但是实际中密码都是普通数据在互联网传输的，这样一点密码被中间人截取并破解，加密直接被攻破。 非对称加密：把密钥分为公钥和私钥，公钥是公开的所有人都可以认领，私钥是保密的只有一个人知道。假设A要发送一封Email给B，他不想让任何其他人在传输中看到Email的内容，做法就是使用B的公钥对Email加密，只有B的私钥能够解密（B的私钥唯一性保证信件不会泄露）。 公钥的作用：对内容本身加密，保证不被其他人看到。 私钥的作用：证明内容的来源。 公钥和私钥是配对关系，公钥加密就用私钥解密，反之亦然，用错的密钥来尝试解密会报错。 对于数字签名，也可以用这个例子做一个通俗的解释。 A先对这封Email执行哈希运算得到hash值简称“摘要”，取名h1。 然后用自己私钥对摘要加密，生成的东西叫“数字签名”。 把数字签名加在Email正文后面，一起发送给B。当然，为了防止邮件被窃听你可以用继续公钥加密。 B收到邮件后用A的公钥对数字签名解密，成功则代表Email确实来自A，失败说明有人冒充。 B对邮件正文执行哈希运算得到hash值，取名h2。 B会对比第4步数字签名的hash值h1和自己运算得到的h2，一致则说明邮件未被篡改。]]></content>
      <categories>
        <category>计算机技术</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>计算机</tag>
        <tag>培训</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络基本介绍]]></title>
    <url>%2Fa%2F345b.html</url>
    <content type="text"><![CDATA[上世纪中期以来，计算机网络已经越来越成为人类社会必不可少的基础设施。当前，我们日常生活和工作几乎离不开计算机网络，无论是“万物互联”的互联网，还是承载各类系统、数据库的专网、内网，都扮演了极为重要的角色。 那么，你真的了解计算机网络吗？今天我们就来简单介绍一下计算机网络的基本知识。 1 什么是计算机网络计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。 1.1 计算机网络的定义狭义的计算机网络是指一些相互连接的、以共享资源为目的的、自治的计算机的集合。从广义上看，现在许多终端也具备了基本的计算机功能，因此早期面向终端的网络也可称之为计算机网络。 从逻辑功能上看，计算机网络是以传输信息为基础目的，用通信线路将多个计算机连接起来的计算机系统的集合，一个计算机网络组成包括传输介质和通信设备。 从用户角度看，计算机网络是一个对用户透明的、能为用户自动管理资源的大的计算机系统。 从连接的角度看，计算机网络就是通过线路互连起来的、自治的计算机集合，确切的说就是将分布在不同地理位置上的具有独立工作能力的计算机、终端及其附属设备用通信设备和通信线路连接起来，并配置网络软件，以实现计算机资源共享的系统。 从需求上来看，计算机网络就是由大量独立的、但相互连接起来的计算机来共同完成计算机任务。 1.2 计算机网络的发展历程重要计算机网络发展的年表包括： 20世纪50年代后期，早期的计算机网络包括美国军用雷达系统半自动地面环境（SAGE）。 1959年，阿纳托利·伊万诺维奇·基托夫向苏联共产党中央委员会提出了一个详细的计划，在计算中心网络的基础上重新组织对苏联武装力量和苏联经济的控制， 即OGAS。 1960年，商业航空预订系统半自动商业研究环境（SABRE）上线了两台相连的主机。 1963年，J. C. R. Licklider向办公室同事发送了一份备忘录，讨论星际计算机网络的概念，这是一个旨在允许计算机用户之间进行一般通信的计算机网络。 1964年，达特茅斯学院的研究人员为大型计算机系统的分布式用户开发了达特茅斯时间共享系统。同年，在麻省理工学院，由通用电气和贝尔实验室支持的研究小组使用计算机来路由和管理电话连接。 在整个20世纪60年代，Paul Baran和Donald Davies独立开发了分组交换的概念，以通过网络在计算机之间传输信息。戴维斯率先使用NPL网络实施这一概念，NPL网络是国家物理实验室（英国）的局域网，线路速度为768Kb/s。 1965年，Western Electric推出了第一款广泛使用的电话开关，实现了真正的计算机控制。 1966年，Thomas Marill和Lawrence G. Roberts发表了一篇关于计算机时间共享的实验性广域网（WAN）的论文。 1969年，ARPANET的前四个节点使用加州大学洛杉矶分校，斯坦福研究所，加州大学圣巴巴拉分校和犹他大学之间的50Kb/s电路连接。Leonard Kleinrock开展了理论工作来模拟分组交换网络的性能，这支持了ARPANET的发展。他在20世纪70年代后期与学生Farouk Kamoun一起进行分层路由的理论工作，对于当今互联网的运作仍然至关重要。 1972年，部署了使用X.25的商业服务，后来用作扩展TCP/IP网络的底层基础设施。 1973年，法国CYCLADES网络率先让主机负责可靠的数据传输，而不是网络本身的集中服务。 1973年，罗伯特梅特卡夫在Xerox PARC研究中心写了一份正式备忘录，描述以太网。这是一个基于阿罗哈网络的网络系统，在20世纪60年代由夏威夷大学的诺曼艾布拉姆森及其同事开发。 1976年7月，罗伯特梅特卡夫和大卫博格斯发表了他们的论文“以太网：本地计算机网络的分布式分组交换”并合作了1977年和1978年收到的几项专利。1979年，罗伯特梅特卡夫一直致力于使以太网成为开放标准。 1976年，Datapoint Corporation的John Murphy创建了ARCNET，这是一个首先用于共享存储设备的令牌传递网络。 1995年，以太网的传输速度容量从10Mb/s增加到100Mb/s。到1998年，以太网支持千兆位的传输速度。随后，增加了高达400Gb/s的更高速度（截至2018年）。以太网容易扩展的能力（例如快速适应支持新的光纤电缆速度）是其继续使用的一个因素。 1.3 计算机网络的属性计算机网络可以被认为是电气工程，电子工程，电信，计算机科学，信息技术或计算机工程的一个分支，因为它依赖于相关学科的理论和实际应用。计算机网络促进人际通信，允许用户通过各种方式有效和轻松地进行通信：电子邮件、即时通讯、在线聊天、语音电话、视频电话和视频会议等。计算机网络允许共享网络和计算资源。用户可以访问和使用网络上的设备提供的资源，例如在共享网络打印机上打印文档或使用共享存储设备。网络允许共享文件、数据和其他类型的信息，使授权用户能够访问存储在网络上其他计算机上的信息。分布式计算使用网络上的计算资源来完成任务。黑客可以使用计算机网络在连接到网络的设备上部署计算机病毒或计算机蠕虫，或者防止这些设备通过拒绝服务攻击访问网络。 2 什么是数据包数据包是由分组交换网络承载的格式化数据单元。数据包由控制信息和用户数据组成，也称为有效负载。控制信息提供用于传送有效载荷的数据，例如：源和目的地网络地址，错误检测码和排序信息。通常，控制信息可在数据包标题和预告片中找到。数据包交换与电路交换相比，通信介质的带宽在多个通信会话之间共享。 2.1 数据包的组成数据包可能包含以下任何组件： 2.1.1 地址数据包的路由需要两个网络地址，即发送主机的源地址和接收主机的目标地址。 2.1.2 错误检测和纠正错误检测和纠正在协议栈中的各个层执行。数据包可以包含校验和、奇偶校验位或循环冗余校验，以检测在传输期间发生的错误。 发送器在发送分组之前执行计算。在目的地收到时，重新计算校验和，并与数据包中的校验和进行比较。如果发现差异，则可以纠正或丢弃数据包。这些丢弃导致的任何数据包丢失由网络协议处理。 在某些情况下，在路由时可能需要修改数据包，在这种情况下会重新计算校验和。 2.1.3 跳数在故障情况下，数据包最终可以通过闭合电路。如果什么也没做，最终循环的数据包数量会增加，直到网络拥塞到故障点。生存时间是每次数据包通过网络节点时减少一个的字段。如果该字段达到零，则路由失败，并丢弃该数据包。 以太网分组没有生存时间字段，因此在存在交换机环路的情况下受到广播辐射的影响。 2.1.4 长度可能有一个字段用于标识整个数据包长度。但在某些类型的网络中，传输的持续时间暗示了长度。 2.1.5 优先级某些网络实现的服务质量可以优先考虑某些类型的数据包优先于其他类型的数据包。该字段指示应该使用哪个数据包队列；发生拥塞的网络中，高优先级队列比低优先级队列更快地清空。 2.1.6 有效负载通常，有效负载是代表应用程序承载的数据。它通常具有可变长度，最大可由网络协议设置，有时也可以是路由上的设备设置。必要时，某些网络可以将较大的数据包分成较小的数据包。 2.2 应用实例2.2.1 IP数据包IP数据包由标头和有效负载组成。标头由固定和可选字段组成。然后添加数据包携带的数据到包中。IP数据包没有标尾。 但是，IP数据包通常作为以太网帧内的有效负载携带，以太网帧具有自己的标头和标尾。 许多网络不提供数据包的传送、非重复或有序传送的保证，例如因特网的UDP协议。但是，可以在可以提供这种保护的数据包服务之上层叠传输协议；TCP和UDP是七层OSI模型的第4层（传输层）的最佳示例。 2.2.2 NASA深空网络空间数据系统咨询委员会（CCSDS）分组遥测标准定义了用于在深空信道上传输航天器仪表数据的协议。在该标准下，使用一个或多个分组发送从航天器仪器发送的图像或其他数据。 3 什么是OSI模型开放式系统互联通信参考模型（英语：Open System Interconnection Reference Model，缩写为 OSI），简称为OSI模型（OSI model），一种概念模型，由国际标准化组织提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于ISO/IEC 7498-1。 3.1 OSI模型的历史在制定计算机网络标准方面，起着重大作用的两大国际组织是：国际电信联盟电信标准化部门，与国际标准组织（ISO），虽然它们工作领域不同，但随着科学技术的发展，通信与信息处理之间的界限开始变得比较模糊，这也成了国际电信联盟电信标准化部门和ISO共同关心的领域。1984年，ISO发布了著名的ISO/IEC 7498标准，它定义了网络互联的7层框架，也就是开放式系统互联参考模型。 3.2 OSI模型层次划分根据建议X.200，OSI将计算机网络体系结构划分为以下七层，标有1～7，第1层在底部。 现“OSI/RM”是英文“Open Systems Interconnection Reference Model”的缩写。 第7层 应用层应用层（Application Layer）提供为应用软件而设的接口，以设置与另一应用软件之间的通信。例如: HTTP，HTTPS，FTP，TELNET，SSH，SMTP，POP3等。 第6层 表达层表达层（Presentation Layer）把数据转换为能与接收者的系统格式兼容并适合传输的格式。 第5层 会话层会话层（Session Layer）负责在数据传输中设置和维护计算机网络中两台计算机之间的通信连接。 第4层 传输层传输层（Transport Layer）把传输表头（TH）加至数据以形成数据包。传输表头包含了所使用的协议等发送信息。例如:传输控制协议（TCP）等。 第3层 网络层网络层（Network Layer）决定数据的路径选择和转寄，将网络表头（NH）加至数据包，以形成分组。网络表头包含了网络数据。例如:互联网协议（IP）等。 第2层 数据链路层数据链路层（Data Link Layer）负责网络寻址、错误侦测和改错。当表头和表尾被加至数据包时，会形成帧。数据链表头（DLH）是包含了物理地址和错误侦测及改错的方法。数据链表尾（DLT）是一串指示数据包末端的字符串。例如以太网、无线局域网（Wi-Fi）和通用分组无线服务（GPRS）等。 分为两个子层：逻辑链路控制（logical link control，LLC）子层和介质访问控制（media access control，MAC）子层。 第1层 物理层物理层（Physical Layer）在局部局域网上传送数据帧（data frame），它负责管理计算机通信设备和网络媒体之间的互通。包括了针脚、电压、线缆规范、集线器、中继器、网卡、主机接口卡等。 4 什么是网络拓扑4.1 定义网络拓扑，指构成网络的成员间特定的排列方式，一般分为物理的、真实的、配在线的结构，或逻辑的、虚拟的、程序设计上的。如果两个网络的连接结构相同，我们就说它们的网络拓扑相同，尽管它们各自内部的物理接线、节点间距离可能会有不同。 4.2 分类 点对点（Point-to-point） 总线拓扑（Bus） 星状拓扑（Star） 环状拓扑（Ring） 网状拓扑（Mesh） 树状拓扑（Tree） 混合式拓扑（Hybrid） 菊花链拓扑（Daisy Chain） 线形拓扑（Linear）：可以多级星形网络来模拟。网络中的任一外围节点只通过一个其它节点来向中央节点方向进行传输。 5 什么是数据传输数据传输，数字传输，或数字通信是数据（数字比特流）在一个点对点或点对多点通信的物理传输管道。这样的管道包括双绞线、光纤、无线通信频道、存储设备及计算机总线。数据本身以一种电磁信号代表，如电压、无线电波、微波或红外线信号。 模拟通信用于传输连续变化的模拟信号，数字通信则用于传输离散消息。运用一个数字调制方法，离散消息可表示为一系列脉冲通过一个线路码（基带传输），或一组有限的连续变化波形（通带传输）。通带调制与相应的解调（也被称为检出）通过调制解调器设备实现。依照数字信号最常见的定义，通常以基带与通带两种信号表示的比特流被认为是数据传输。另一种定义中则只考虑到基带信号，而数据的通带传输作为一种形式的数模转换。 数据传输可以是从数据源始发的数字信息，例如一台计算机或一个键盘。也可以是将一个模拟信号如电话或视频信号数字化至一个比特流，例如使用脉冲编码调制（PCM）或更进一步的数据压缩（数模转换与数据压缩）方案。这种信源的编解码是通过编解码器设备所进行的。 5.1 概述数字传输或数据传输以前一直属于电信和电气工程的范畴。数据传输的基本原则也可以包涵在数据通信之中的计算机科学/计算机工程学科内，其中还包括计算机联网或计算机通信应用程序和网络协议中，例如路由、交换和进程间通信。虽然传输控制协议（TCP）涉及到“传输”这个术语，TCP和其他传输层协议一般都“不”在有关数据传输的教科书或课程中讨论，而是在计算机网络中说明。 远程传输一词涉及模拟通信和数字通信。在大多数的教科书中，模拟传输一词仅是指一个模拟信息信号通过一个模拟信号（没有数字化）的传输，无论是作为一个非调制的基带信号，还是作为用模拟调制方法（如AM或FM）的一个通带信号。它也可能包括模拟上的模拟脉冲调制的基带信号，如脉冲宽度调制。在计算机联网的传统的几本书中，“模拟传输”是指使用数字调制方法的位流通带传输，比如FSK， PSK和ASK。注意，这些方法包括在例如名为数字传输或数据传输的教科书中。 数据传输的理论方面包括在信息论和编码理论中。 5.2 协议分层在数据传输领域的课程与教材中，通常使用如下的OSI模型处理协议分层与主题： 第一层，物理层 信道编码，包括 数字调制schemes 线路编码schemes 前向纠错码（FEC）码 位同步 多路复用 均衡 信道模型 第二层，数据链路层 信道接入schemes, 介质访问控制（MAC） 分组模式通信和帧同步 错误检测和自动重复请求（ARQ） 流量控制 第六层，表达层 信源编码（数字化和数据压缩）和信息论 加密（可能发生在任何一层） 6 什么是节点在数据通信中，一个物理网络节点可以是数据电路端接设备（DCE），如调制解调器、 集线器、桥接器或交换机；也可以是一个数据终端设备（DTE），如数字手机，打印机或主机（例如路由器、工作站或服务器）。 如果所讨论的网络是一个LAN或WAN，每一个LAN或WAN节点（至少应该是数据链路层设备）必须拥有MAC地址，一般每个网卡拥有一个。例如计算机、包交换机、xDSL调制解调器（带有乙太接口）以及无线LAN接入点。注意，集线器构成一个物理网络节点，但是并不构成LAN网络节点。这是因为一个使用集线器连接的网络逻辑上来说是一个总线网络。类似的，中继器或PSTN调制解调器（带有串行接口）是一个物理网络节点而不是一个LAN节点。 如果所讨论的网络是Internet或一个Intranet，许多物理网络节点是主机（即通过IP地址来标识的Internet节点）。所有的主机都是物理网络节点。但是，一些数据链路层设备，如交换机、桥接器和WLAN 接入点不拥有IP主机地址（除了有时用于管理目的），这些设备不认为是Internet节点或主机，但它们是物理网络节点和LAN节点。 7 什么是网络传输协议通信协议（英语：Communications Protocol，也称传输协议）在电信中是指在任何物理介质中允许两个或多个在传输系统中的终端之间传播信息的系统标准，也是指计算机通信或网络设备的共同语言。通信协议定义了通信中的语法学, 语义学和同步规则以及可能存在的错误检测与纠正。通信协议在硬件，软件或两者之间皆可实现。 为了交换大量信息，通信系统使用通用格式（协议）。每条信息都有明确的意义使得预定位置给予响应，并独立实现回应指定的行为，通信协议须参与实体都同意才能生效。为了达成一致，协议必须要有技术标准. 编程语言在计算方面也应有相应标准，所以在这个方面可以用编程语言做类比: 编程语言是为了模式化的计算而传输协议为了更畅通的交流。 多类别协议构建了单个传输的不同方面，包括同时进行的协议模块，和在软件上实现时的协议栈。 网络传输协议（Internet communication protocol）是互联网工程任务组 （IETF）制定的。电气电子工程师学会（IEEE）负责有线无线传输， 国际标准化组织 (ISO) 负责其他类别。ITU-T 负责电信通讯传输以及公共交换电话网 (PSTN)的格式。 在公共交换电话网与网络技术融合的今天，形势驱使着通信标准进一步的合并收敛。 8 什么是路由路由（routing）就是通过互联的网络把信息从源地址传输到目的地址的活动。路由发生在OSI网络参考模型中的第三层即网络层。 路由引导分组转送，经过一些中间的节点后，到它们最后的目的地。作成硬件的话，则称为路由器。路由通常根据路由表——一个存储到各个目的地的最佳路径的表——来引导分组转送。因此为了有效率的转送分组，创建存储在路由器存储器内的路由表是非常重要的。 路由与桥接的不同，在于路由假设地址相似的节点距离相近。这使得路由表中的一项纪录可以表示到一群地址的路径。因此，在大型网络中，路由优于桥接，且路由已经成为互联网上查找路径的最主要方法。 较小的网络通常可以手动设置路由表，但较大且拥有复杂拓扑的网络可能常常变化，若要手动创建路由表是不切实际的。尽管如此，大多数的公共交换电话网络（PSTN）仍然使用预先计算好的路由表，在直接连线的路径断线时才使用预备的路径；见公共交换电话网路由。“动态路由”尝试按照由路由协议所携带的信息来自动创建路由表以解决这个问题，也让网络能够近自主地避免网络断线或失败。 动态路由当前主宰了整个互联网。然而，设置路由协议常须要经验与技术；当前的网络技术还没有发展到能够全自动地设置路由。 分组交换网络（例如互联网）将数据分割成许多带有完整目的地地址的分组，每个分组单独转送。而电路交换网络（例如公共交换电话网络）同样使用路由来找到一条路径，让接下来的数据能在仅带有部分目的地地址的情况下也能够抵达正确的目的地。 9 什么是网络安全网络安全（英语：Network Security）包含网络设备安全、网络信息安全、网络软件安全。 黑客通过基于网络的入侵来达到窃取敏感信息的目的，也有人以基于网络的攻击见长，被人收买通过网络来攻击商业竞争对手企业，造成网络企业无法正常营运，网络安全就是为了防范这种信息盗窃和商业竞争攻击所采取的措施。 参考资料 计算机网络 - Wikipedia （ https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C ） 计算机网络 - 百度百科 （ https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/18763 ） Computer Network - Wikipedia （ https://en.wikipedia.org/wiki/Computer_network ） Network Packet - Wikipedia （ https://en.wikipedia.org/wiki/Network_packet ） OSI模型 - Wikipedia （ https://zh.wikipedia.org/wiki/OSI模型 ）]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>计算机</tag>
        <tag>培训</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【开源】办公自动化探索：全库质检周报助手]]></title>
    <url>%2Fa%2F349e.html</url>
    <content type="text"><![CDATA[众所周知，事务性工作是繁杂而琐碎的。像一些周报等定时需要做的工作，有时会让人焦头烂额，陷入文件整理和对比的泥潭。比如每周一需要出的全库质检周报，就需要核对全库质检情况跟踪表，并逐个检查SVN上各地区提交的最新质检报告。 那么，是否有一种方法可以让计算机辅助我们完成这项工作呢？ 答案是肯定的，我们的全库质检周报助手就呼之欲出了。 什么？全库质检和你没关系？别着急，它的一些原理你会觉得有用的。 开发环境 Python 3.7 Openpyxl模块 Windows 10 开发难点该工具需要我们去核对SVN文件夹，看各地区是否提交了质检报告。那么Python自带的OS模块就能完成这项任务。 我们还需要检查跟踪表，那么我们就需要处理Excel文件。Python中这类模块有很多，这次我们选用比较简单的Openpyxl模块。 功能实现目前工具已经完成了1.0版本的开发，实现的功能有自动检查全库质检跟踪表（xlsx格式）各部门各地区是否填写本周进展及自动检查SVN目录中各地区是否提交了最新质检报告。 目前还无法自动帮我们出具周报，但已经帮我们处理了最复杂的工作。我们只需要等待几秒，对着终端出具我们的周报就可以了。 源代码本工具开源，大家可自由研究和使用，禁止用作商业用途～ 请大家前往我的GitHub克隆代码仓库获取源代码。 不想看源代码，想直接使用编译过的工具的，请至本站下载页面下载。]]></content>
      <categories>
        <category>办公自动化</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>办公自动化</tag>
        <tag>全库质检</tag>
        <tag>DCTK</tag>
        <tag>开源</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + NexT进阶美化攻略]]></title>
    <url>%2Fa%2F5c3a.html</url>
    <content type="text"><![CDATA[前言本文将介绍部署Hexo博客并启用NexT主题后一些进阶的美化技巧。美化后具体效果可以参考本站。 在本文中，站点配置文件指的是博客根目录下的 _config.yml 文件，主题配置文件指的是博客根目录下 themes/next/_config.yml 文件。 目录 切换主题风格 配置菜单 配置动态背景 添加页眉GitHub页面跳转 配置RSS 修改文章底部标签样式 添加文章末尾“本文结束”说明 修改代码块样式 配置侧边栏社交图标 配置首页文章阴影效果 添加网站底部字数统计 配置网站图标 添加文章字数统计 隐藏底部Hexo、NexT信息 配置友情链接 配置文章底部版权信息 配置站内搜索 配置Live2D动画效果 切换主题风格安装NexT主题后，默认的主题风格为Muse。如要切换主题风格，打开主题配置文件，找到如下配置。 12345# Schemesscheme: Muse //默认主题#scheme: Mist#scheme: Pisces#scheme: Gemini 注释掉当前的scheme，将需要切换的主题风格取消注释，重新生成博客后即可完成切换。 配置菜单NexT主题默认只有两个菜单，首页和归档。 如果需要添加，在主题配置文件中，查找“menu:”配置项，将需要的菜单项取消注释。 如果需要添加的菜单项不在配置文件的预设菜单项中，则按照统一格式添加自定义菜单项，从Font Awesome网站寻找合适的图标，将图标名称写在“||”后。 完成菜单项的配置后，接下来需要添加新菜单项的页面。此处以 标签 菜单项为例。 打开终端定位到博客根目录，使用如下命令创建菜单项页面。 1hexo new page "tags" 然后编辑博客根目录下 source/tags/index.md 文件，在其头信息中添加以下信息。 1type: "tags" 配置动态背景在主题配置文件中，查找“canvas_nest:”配置项，将其值配置为true即可。 添加页眉GitHub页面跳转前往GitHub Corners网站，选择一款喜欢的挂饰，并拷贝其代码。 打开博客根目录下 themes/next/layout/_layout.swig 文件，定位到如下代码。 1&lt;div class="headband"&gt;&lt;/div&gt; 在其下方添加上挂饰的代码。 配置RSS打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install --save hexo-generator-feed 打开站点配置文件，并定位到如下代码。 12# Extensions## Plugins: http://hexo.io/plugins/ 在其下方添加如下代码。 1plugins: hexo-generate-feed 在主题配置文件中，查找“rss:”配置项，将其值配置为 /atom.xml 即可。 修改文章底部标签样式打开博客根目录下 themes/next/layout/_macro/post.swig 文件，查找“rel=”tag”&gt;#”。 将“#”替换为如下代码。 1&lt;i class="fa fa-tag"&gt;&lt;/i&gt; 添加文章末尾“本文结束”说明打开博客根目录下 themes/next/layout/_macro/ 目录，在其中新建 passage-end-tag.swig 文件。 使用文本编辑器在该文件中添加如下内容。 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 打开博客根目录下 themes/next/layout/_macro/post.swig 文件，在其 post-body 和 post-footer 之间（一般为 END POST BODY 段落后）添加如下代码。 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 在主题配置文件中，在任意行添加如下内容。 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 修改代码块样式打开博客根目录下 themes/next/source/css/_custom/custom.styl 文件，添加如下代码。 1234567891011121314code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 配置侧边栏社交图标在主题配置文件中，搜索“social:”，对其取消注释，并添加自己的社交账号，从Font Awesome网站寻找合适的图标，将图标名称写在“||”后。完成后配置示例如下。 1234567891011121314151617181920212223# Social Links.# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: GitHub: https://github.com/Jovany-Rong || github E-Mail: mailto:amphliegg@gmail.com || envelope 知乎: https://www.zhihu.com/people/rong-chen-fei/activities || book-open TapTap: https://www.taptap.com/user/4323230 || gamepad #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false 配置首页文章阴影效果打开博客根目录下 themes/next/source/css/_custom/custom.styl 文件，添加如下代码。 12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 添加网站底部字数统计打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install hexo-wordcount --save 打开博客根目录下 themes/next/layout/_partials/footer.swig 文件，在末尾添加如下代码。 1234&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 配置网站图标首先准备好自己需要用到的图标，共需要准备16 x 16及32 x 32两种规格的图标。图标可以从第三方网站（如阿里巴巴矢量图标库等)中下载。 将图片保存在博客根目录下 themes/next/source/images/ 目录中。 在主题配置文件中，搜索“favicon:”，将其中的 small 参数和 medium 参数值分别设为16 x 16及32 x 32两种规格图标的相对路径。 添加文章字数统计该功能需要用到添加网站底部字数统计中安装的依赖，安装过程在此不赘述。 在主题配置文件中，搜索“post_wordcount:”，配置修改为如下所示。 12345678# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true totalcount: true separated_meta: true 隐藏底部Hexo、NexT信息打开博客根目录下 themes/next/layout/_partials/footer.swig 文件，注释掉以下这段代码。 12345678910111213141516171819202122232425262728&lt;!--&lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% if theme.footer.powered %&#125; &lt;div class="powered-by"&gt;&#123;# #&#125;&#123;&#123; __('footer.powered', '&lt;a class="theme-link" target="_blank" href="https://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;&#123;% if theme.footer.theme.enable %&#125; &lt;div class="theme-info"&gt;&#123;# #&#125;&#123;&#123; __('footer.theme') &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next"&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.custom_text %&#125; &lt;div class="footer-custom"&gt;&#123;# #&#125;&#123;&#123; theme.footer.custom_text &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;--&gt; 配置友情链接在主题配置文件中，搜索“Blog rolls”，如下配置，即可添加友情链接。 1234567891011# Blog rollslinks_icon: linklinks_title: 友情链接#links_layout: blocklinks_layout: inline#links中配置成自己需要的友情链接地址links: GitHub: https://github.com/ 南京国图信息产业有限公司: http://www.gtmap.cn/ 南京国图协同办公平台: http://oa.gtis.com.cn/ 配置文章底部版权信息打开博客根目录下 themes/next/layout/_macro/ 目录，在其中新建 my-copyright.swig 文件。 使用文本编辑器在该文件中添加如下内容。 123456789101112131415161718192021222324252627282930&#123;% if page.copyright %&#125;&lt;div class="my_post_copyright"&gt; &lt;script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script src="https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"&gt;&lt;/script&gt; &lt;script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"&gt;&lt;/script&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;"&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href="/" title="访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;" title="&#123;&#123; page.title &#125;&#125;"&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class="copy-path" title="点击复制文章链接"&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="&#123;&#123; page.permalink &#125;&#125;" aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard('.fa-clipboard'); $(".fa-clipboard").click(function()&#123; clipboard.on('success', function()&#123; swal(&#123; title: "", text: '复制成功', icon: "success", showConfirmButton: true &#125;); &#125;); &#125;); &lt;/script&gt;&#123;% endif %&#125; 打开博客根目录下 themes/next/source/css/_common/components/post/ 目录，在其中新建 my-copyright.styl 文件。 使用文本编辑器在该文件中添加如下内容。 123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #b5b5b5; font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #a3d2a3; text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 打开博客根目录下 themes/next/layout/_macro/post.swig 文件，定位到如下代码。 12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include 'wechat-subscriber.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125; 在其上方添加如下代码。 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'my-copyright.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 打开博客根目录下 themes/next/source/css/_common/components/post/post.styl 文件，在其末尾添加如下代码。 1@import "my-post-copyright" 打开站点配置文件，搜索 URL ，配置为如下所示。 123456# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://wenmobo.github.io/ //你的网站地址root: /permalink: :year/:month/:day/:title/permalink_defaults: 以后写的Markdown文章头信息中，添加 copyright: true 即可。 配置站内搜索打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install hexo-generator-search --save 再安装另一个依赖。 1npm install hexo-generator-searchdb --save 在站点配置文件中，添加如下内容。 12345search: path: search.xml field: post format: html limit: 10000 在主题配置文件中，搜索 local_search: 配置项，将 enable 参数配置为 true 即可。 配置Live2D动画效果打开终端定位到博客根目录，使用如下命令安装相关依赖。 1npm install --save hexo-helper-live2d 自己制作或从第三方下载需要的Live2D动画。 下载好之后将所有动画模板拷贝到博客根目录下node_modules目录中。 在站点配置文件中，添加如下配置。 1234567891011live2d: enable: true pluginModelPath: assets/ model: use: live2d-widget-model-epsilon2_1 #模板目录，在node_modules里 display: position: right width: 150 height: 300 mobile: show: false #是否在手机进行显示]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>攻略</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coding Pages绑定阿里云域名无法使用二级域名访问解决方案]]></title>
    <url>%2Fa%2F575e.html</url>
    <content type="text"><![CDATA[问题描述在腾讯云开发者平台（原Coding.net平台）部署Pages静态网页，在设置中绑定了阿里云顶级域名ABC.com。在阿里云域名控制台中，ABC.com域名有两条解析记录，分别通过主机记录的 @和www解析到Pages应用访问地址（Username.coding.me）。 解析完成后，通过顶级域名ABC.com能够正常访问到我们的Pages应用，但通过二级域名www.ABC.com访问时报404错误。 原因分析与GitHub平台不同，腾讯云开发者平台Pages应用支持绑定多个域名，但不支持自动绑定顶级域名下的二级域名，需要手动增加二级域名的绑定才能生效。 解决方法在Pages设置中增加二级域名www.ABC.com的绑定。稍待片刻，即可正常访问应用。]]></content>
      <categories>
        <category>网络技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Coding</tag>
        <tag>腾讯云开发者平台</tag>
        <tag>域名</tag>
        <tag>问题解决</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub Pages + Hexo + 阿里云域名无法访问解决方案]]></title>
    <url>%2Fa%2F712d.html</url>
    <content type="text"><![CDATA[问题描述购入了阿里云域名（英文.com），且有自己的GitHub Pages个人网站。在GitHub中配置了Custom Domain为刚刚购买的域名（英文.com），但通过该域名无法访问个人网站，且直接访问github.io也自动跳转到域名而失效。 解决方法等待域名实名制审核成功，收到手机短信提醒后，在域名控制台中新增2条解析记录，分别如下配置。 记录类型 主机记录 解析线路 记录值 MX优先级 TTL 状态 CNAME @ 默认 英文.com – 10分钟 正常 CNAME www 默认 英文.com – 10分钟 正常 在Hexo的博客根目录下source文件夹中，新建CNAME文件（没有后缀名且必须大写），使用文本编辑器打开，输入 英文.com 。 重新部署Hexo。 等待域名解析完成后，即可使用新域名访问个人网站。]]></content>
      <categories>
        <category>网络技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>域名</tag>
        <tag>问题解决</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[EasyOM 1.0.1更新说明]]></title>
    <url>%2Fa%2F2057.html</url>
    <content type="text"><![CDATA[作者： 戎 晨飞（Jovany Rong） 一、更新内容一览 修复了在Windows 6.1平台（包括Windows 7系列和Windows Server 2008系列等操作系统）中，有空置光驱时会造成硬盘检查崩溃的问题； 新增整体运维报告输出功能，在首页点击“Check”按钮进行整体运维结束时，程序自动产生html格式的运维报告和eom格式的加密报文（eom报文供提交时使用），使运维结果更具可读性； 提升了在目标数据库过大时，数据库运维的性能，使其更不容易出现卡死的情况； 多处错误修复和文本优化。 二、更新适用对象本次更新推荐所有EasyOM用户更新。 三、更新方式1) 通过程序内关于-&gt;关于EasyOM中的Update按钮下载最新版本；2) 直接点击此处获取更新。 四、其他说明对本次更新及EasyOM工具有任何意见或建议，请联系技术及质量管理部。]]></content>
      <categories>
        <category>运维产品</category>
      </categories>
      <tags>
        <tag>EasyOM</tag>
        <tag>更新说明</tag>
        <tag>运维</tag>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
